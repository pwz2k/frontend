{"version":3,"sources":["components/Loader.jsx","components/PageLoader.jsx","components/Alert.jsx","auth/Login.jsx","routes/AuthRouter.jsx","components/Sidebar.jsx","components/Header.jsx","source/Balance.jsx","components/Modal.jsx","components/TopCard.jsx","source/Barcodes.jsx","source/Dashboard.jsx","source/Labels.jsx","source/Settings.jsx","source/Stats.jsx","tools/ApiRequests.js","source/Ticket.jsx","source/Api.jsx","source/GeneateLabel.jsx","routes/DashboardRouter.jsx","App.js","reportWebVitals.js","index.js","env.js","tools/helper.js"],"names":["Loader","props","className","role","PageLoader","alert","message","Login","state","showPassword","loader","reCaptcha","componentDidMount","document","title","handlePasswordVisiblity","setState","login","e","preventDefault","recaptcha","execute","params","username","target","value","password","axios","post","server","then","rsp","Cookies","set","data","payload","token","window","location","href","catch","err","response","onResolved","getResponse","this","onSubmit","type","placeholder","name","autoFocus","required","onClick","ref","sitekey","RECAPTCHA_KEY","PureComponent","AuthRouter","body","classList","add","path","component","Sidebar","tab","split","logout","remove","isAdmin","id","to","src","alt","Header","mode","localStorage","getItem","setMode","setItem","getElementById","setAttribute","pretitle","reload","Balance","balanceHistory","pager","totalPage","search","page","addMessage","access","readAccess","readHistory","get","config","addBalance","amount","parseFloat","paymentUrl","htmlFor","balance","toFixed","map","status","Date","createdAt","toLocaleDateString","next","Modal","style","children","TopCard","col","icon","Dashboard","stats","barcodes","labels","chart","superAccess","history","push","console","log","readStats","filter","canvas","createElement","firstChild","removeChild","appendChild","label","reverse","datasets","count","LineChart","Labels","totalPages","date","fromStreetNumber","fromStreetNumber2","fromZip","fromCity","fromState","fromCountry","toStreetNumber","toStreetNumber2","toZip","toCity","toState","toCountry","isFromAddressVerified","isToAddressVerified","apiKey","searchLoader","readLabels","res","Math","ceil","totalLabels","generateLabel","form","FormData","forEach","key","day","getDate","month","getMonth","year","getFullYear","headers","onChange","code","includes","length","replaceAll","substring","verifyAddress","street1","street2","city","zip","obj","zipCodeLookup","result","endsWith","slice","cityStateLookup","index","weight","fromName","barcodeOCR","toDateString","JSON","parse","statusMessage","pdfPath","download","cursor","selected","maxLength","Object","keys","item","Settings","loaderKey","messageKey","update","resetKey","Stats","updateStats","attr","priority_weight","express_weight","firstclass_weight","priority_minimum_stock","express_minimum_stock","firstclass_minimum_stock","s","i","toUpperCase","defaultValue","ApiRequests","error","apiRequests","Ticket","tickets","ticketMessages","ticket","action","createTicketMessage","createTicketLoader","statusLoader","sendMessage","sendLoader","readTickets","getTickets","readTicketMessage","getTicket","messages","sendTicketMessage","setTicketStatus","createTicket","subject","lastUpdate","lastMessageFrom","height","overflowY","from","maxWidth","fontSize","toLocaleString","cols","rows","errorCodesJson","ApiDoc","isLoaded","keyLoader","copy","React","createRef","regenerateBtn","navigator","clipboard","writeText","current","innerText","setTimeout","c","GeneateLabels","recycleLoader","isVerificationInitiated","pricing","price","addressMessage","rateLimit","getPricing","sort","a","b","recycleLabel","modalCloseButton","click","changePrice","pricingObj","find","toWeight","fromWeight","changeType","App","isLogin","isAllLoaded","checkUserLogin","DashboardRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","require","module","exports","Authorization","checkAccess","BarChart","dom","Chart","options","scales","yAxes","ticks","callback","gridLines","display","PieChart","tooltips","callbacks","beforeLabel","legend","generateLabels","Legend","content","bgColor","backgroundColor","quillToolbarOptions","header","list","script","indent","direction","size","color","background","font","align"],"mappings":"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","file":"static/js/main.defcd81e.chunk.js","sourcesContent":["export default function Loader(props) {\n  return (\n    <div\n      className={\n        props.className\n          ? \"spinner-border d-inline-block \" + props.className\n          : \"spinner-border d-inline-block spinner-border-sm\"\n      }\n      role=\"status\"\n    >\n      <span className=\"sr-only\"></span>\n    </div>\n  );\n}\n","import Loader from \"./Loader\";\nexport default function PageLoader() {\n  return (\n    <div className=\"loader text-center\">\n      <Loader className=\"spinner-border-lg\" />\n    </div>\n  );\n}\n","export default function alert(props) {\n  return (\n    <div className={\"alert alert-icon alert-\" + props.className} role=\"alert\">\n      <strong>{props.message}</strong>\n    </div>\n  );\n}\n","import React, { PureComponent } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { server, RECAPTCHA_KEY } from \"../env\";\n\n// helper components\nimport Loader from \"../components/Loader\";\nimport Alert from \"../components/Alert\";\nimport Recaptcha from \"react-google-invisible-recaptcha\";\n\nexport default class Login extends PureComponent {\n  state = {\n    showPassword: false,\n    loader: \"\",\n    message: \"\",\n    reCaptcha: null,\n  };\n\n  componentDidMount = () => {\n    document.title = \"Login\";\n  };\n\n  handlePasswordVisiblity = () => {\n    this.setState({\n      showPassword: this.state.showPassword ? false : true,\n    });\n  };\n\n  login = async (e) => {\n    e.preventDefault();\n\n    this.setState({\n      loader: <Loader />,\n    });\n\n    await this.recaptcha.execute();\n\n    const params = {\n      username: e.target.username.value,\n      password: e.target.password.value,\n      \"g-recaptcha-response\": this.state.reCaptcha,\n    };\n\n    await axios\n      .post(server + \"/api/user/login\", params)\n      .then((rsp) => {\n        Cookies.set(\"token\", rsp.data.payload.token);\n        this.setState({\n          loader: \"\",\n          message: <Alert className=\"success\" message={rsp.data.message} />,\n        });\n        window.location.href = \"/\";\n      })\n      .catch((err) => {\n        if (err.response) {\n          this.setState({\n            message: (\n              <Alert className=\"danger\" message={err.response.data.message} />\n            ),\n          });\n        }\n        this.setState({\n          loader: \"\",\n        });\n      });\n  };\n\n  onResolved = () => {\n    this.setState({ reCaptcha: this.recaptcha.getResponse() });\n  };\n\n  render() {\n    const { showPassword, loader, message } = this.state;\n    return (\n      <div className=\"col-12 col-md-5 col-xl-4 my-5\">\n        <h1 className=\"display-4 text-center mb-3\">Log-In</h1>\n\n        <p className=\"text-muted text-center mb-5\">Welcome Back</p>\n\n        <form onSubmit={this.login}>\n          {message}\n          <div className=\"form-group\">\n            <label className=\"form-label\"> Username </label>\n\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter username\"\n              name=\"username\"\n              autoFocus\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <label className=\"form-label\"> Password </label>\n              </div>\n            </div>\n\n            <div className=\"input-group input-group-merge\">\n              <input\n                className=\"form-control\"\n                type={showPassword ? \"text\" : \"password\"}\n                placeholder=\"Enter your password\"\n                name=\"password\"\n                required\n              />\n\n              <span\n                className=\"input-group-text\"\n                onClick={this.handlePasswordVisiblity}\n              >\n                {showPassword ? (\n                  <i className=\"fe fe-eye-off\"></i>\n                ) : (\n                  <i className=\"fe fe-eye\"></i>\n                )}\n              </span>\n            </div>\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-lg w-100 btn-primary mb-3\">\n            Log In {loader}\n          </button>\n        </form>\n        <Recaptcha\n          ref={(ref) => (this.recaptcha = ref)}\n          sitekey={RECAPTCHA_KEY}\n          onResolved={this.onResolved}\n        />\n      </div>\n    );\n  }\n}\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\n// Components\nimport Login from \"../auth/Login\";\nimport Confirm from \"../auth/Confirm\";\n\nexport default function AuthRouter() {\n  document.body.classList.add(\"d-flex-grid\");\n  document.body.classList.add(\"bg-auth\");\n  return (\n    <BrowserRouter>\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <Switch>\n            {/* <Route path=\"/Confirm\" component={Confirm} /> */}\n            <Route path=\"/\" component={Login} />\n          </Switch>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n","import React, { PureComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport { server, config } from \"../env\";\n\nexport default class Sidebar extends PureComponent {\n  state = {\n    tab: window.location.href.split(\"/\")[3] || \"/\",\n  };\n\n  logout = () => {\n    Cookies.remove(\"token\");\n    window.location.href = \"/login\";\n  };\n\n  render() {\n    const { tab, isAdmin } = this.state;\n\n    return (\n      <nav\n        className=\"navbar navbar-vertical fixed-start navbar-expand-md navbar-light\"\n        id=\"sidebar\"\n      >\n        <div className=\"container-fluid\">\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#sidebarCollapse\"\n            aria-controls=\"sidebarCollapse\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n\n          {/* <Link className=\"navbar-brand\" to=\"/\">\n            <img\n              src={\n                localStorage.getItem(\"themeMode\") === \"light\"\n                  ? \"/logo2.png\"\n                  : \"/logo1.png\"\n              }\n              className=\"navbar-brand-img mx-auto\"\n              alt=\"...\"\n            />\n          </Link> */}\n\n          <div className=\"navbar-user d-md-none\">\n            <div className=\"dropdown\">\n              <Link\n                to=\"#\"\n                id=\"sidebarIcon\"\n                className=\"dropdown-toggle\"\n                role=\"button\"\n                data-bs-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                <div className=\"avatar avatar-sm avatar-online\">\n                  <img\n                    src=\"https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png\"\n                    className=\"avatar-img rounded-circle\"\n                    alt=\"...\"\n                  />\n                </div>\n              </Link>\n\n              <div\n                className=\"dropdown-menu dropdown-menu-end\"\n                aria-labelledby=\"sidebarIcon\"\n              >\n                <Link to=\"/settings\" className=\"dropdown-item\">\n                  Settings\n                </Link>\n                <hr className=\"dropdown-divider\" />\n                <Link to=\"#\" onClick={this.logout} className=\"dropdown-item\">\n                  Logout\n                </Link>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"collapse navbar-collapse\" id=\"sidebarCollapse\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <Link\n                  className={tab === \"/\" ? \"nav-link active\" : \"nav-link\"}\n                  onClick={() => this.setState({ tab: \"/\" })}\n                  to=\"/\"\n                >\n                  <i className=\"fe fe-layout\"></i> Dashboard\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link\n                  className={\n                    tab === \"generate-label\" ? \"nav-link active\" : \"nav-link\"\n                  }\n                  onClick={() => this.setState({ tab: \"/generate-label\" })}\n                  to=\"/generate-label\"\n                >\n                  <i className=\"fe fe-tag\"></i> New Order\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link\n                  className={tab === \"labels\" ? \"nav-link active\" : \"nav-link\"}\n                  onClick={() => this.setState({ tab: \"/labels\" })}\n                  to=\"/labels\"\n                >\n                  <i className=\"fe fe-tag\"></i> Orders\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link\n                  className={tab === \"balance\" ? \"nav-link active\" : \"nav-link\"}\n                  onClick={() => this.setState({ tab: \"/balance\" })}\n                  to=\"/balance\"\n                >\n                  <i className=\"fe fe-dollar-sign\"></i> Balance\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link\n                  className={tab === \"tickets\" ? \"nav-link active\" : \"nav-link\"}\n                  onClick={() => this.setState({ tab: \"/tickets\" })}\n                  to=\"/tickets\"\n                >\n                  <i className=\"fe fe-tag\"></i> Tickets\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link\n                  className={\n                    tab === \"api-documentation\" ? \"nav-link active\" : \"nav-link\"\n                  }\n                  onClick={() => this.setState({ tab: \"/api-documentation\" })}\n                  to=\"/api-documentation\"\n                >\n                  <i className=\"fe fe-code\"></i> API\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link\n                  className={\n                    tab === \"settings\" ? \"nav-link active\" : \"nav-link\"\n                  }\n                  onClick={() => this.setState({ tab: \"/settings\" })}\n                  to=\"/settings\"\n                >\n                  <i className=\"fe fe-settings\"></i> Settings\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"#\" onClick={this.logout}>\n                  <i className=\"fe fe-log-out\"></i> Logout\n                </Link>\n              </li>\n            </ul>\n\n            <div className=\"mt-auto\"></div>\n\n            <div className=\"navbar-user d-none d-md-flex\" id=\"sidebarUser\">\n              <div className=\"dropup\">\n                <Link\n                  to=\"#\"\n                  id=\"sidebarIconCopy\"\n                  className=\"dropdown-toggle\"\n                  role=\"button\"\n                  data-bs-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  <div className=\"avatar avatar-sm avatar-online\">\n                    <img\n                      src=\"https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png\"\n                      className=\"avatar-img rounded-circle\"\n                      alt=\"...\"\n                    />\n                  </div>\n                </Link>\n\n                <div\n                  className=\"dropdown-menu\"\n                  aria-labelledby=\"sidebarIconCopy\"\n                >\n                  {isAdmin ? (\n                    <Link to=\"/settings\" className=\"dropdown-item\">\n                      Settings\n                    </Link>\n                  ) : (\n                    \"\"\n                  )}\n                  {isAdmin ? <hr className=\"dropdown-divider\" /> : \"\"}\n                  <Link to=\"#\" onClick={this.logout} className=\"dropdown-item\">\n                    Logout\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nexport default class Header extends PureComponent {\n  state = {\n    mode: localStorage.getItem(\"themeMode\"),\n  };\n\n  componentDidMount = () => {\n    this.setMode(this.state.mode);\n  };\n\n  setMode = (mode) => {\n    localStorage.setItem(\"themeMode\", mode);\n    if (mode === \"light\")\n      document\n        .getElementById(\"theme\")\n        .setAttribute(\"href\", \"/assets/css/theme.bundle.css\");\n    else\n      document\n        .getElementById(\"theme\")\n        .setAttribute(\"href\", \"/assets/css/theme-dark.bundle.css\");\n    this.setState({\n      mode,\n    });\n  };\n\n  render() {\n    const { mode } = this.state;\n    return (\n      <div className=\"header\">\n        <div className=\"container-fluid\">\n          <div className=\"header-body\">\n            <div className=\"row align-items-end\">\n              <div className=\"col\">\n                <h6 className=\"header-pretitle\">{this.props.pretitle}</h6>\n                <h1 className=\"header-title\">{this.props.title}</h1>\n              </div>\n              <div className=\"col-auto\">\n                <div className=\"btn-group-toggle\">\n                  {mode === \"dark\" ? (\n                    <label\n                      className=\"btn btn-sm btn-white col\"\n                      onClick={() => this.setMode(\"light\")}\n                    >\n                      <i className=\"fe fe-sun mr-2\"></i> Light Mode\n                    </label>\n                  ) : (\n                    <label\n                      className=\"btn btn-sm btn-dark col\"\n                      onClick={() => {\n                        this.setMode(\"dark\");\n                        window.location.reload();\n                      }}\n                    >\n                      <i className=\"fe fe-moon mr-2\"></i> Dark Mode\n                    </label>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Header from \"../components/Header\";\nimport axios from \"axios\";\nimport { server, config } from \"../env\";\nimport Loader from \"../components/Loader\";\nimport Alert from \"../components/Alert\";\nimport { Link } from \"react-router-dom\";\nimport DataList from \"../components/DataList\";\n\nexport default class Balance extends PureComponent {\n  state = {\n    balanceHistory: [],\n    pager: {\n      totalPage: 1,\n      search: \"\",\n      page: 1,\n    },\n    loader: \"\",\n    message: \"\",\n    addMessage: \"\",\n    access: {},\n  };\n\n  componentDidMount = async () => {\n    this.readAccess();\n    this.readHistory();\n  };\n\n  readAccess = async () => {\n    await axios\n      .get(server + \"/api/user/access\", config)\n      .then((rsp) => {\n        this.setState({ access: rsp.data.payload });\n      })\n      .catch((err) => {});\n  };\n\n  readHistory = async (page = 1, search = \"\") => {\n    const { pager } = this.state;\n    pager.page = page;\n    pager.search = search;\n    this.setState({ pager });\n    await axios\n      .post(server + \"/api/balance/read\", pager, config)\n      .then((rsp) => {\n        this.setState({\n          balanceHistory: rsp.data.payload,\n          pager: {\n            ...rsp.data.pager,\n          },\n        });\n      })\n      .catch((err) => {});\n  };\n\n  addBalance = async (e) => {\n    e.preventDefault();\n\n    const params = {\n      amount: parseFloat(e.target.amount.value),\n    };\n\n    this.setState({ loader: <Loader /> });\n\n    await axios\n      .post(server + \"/api/balance/create\", params, config)\n      .then((rsp) => {\n        this.setState({\n          addMessage: <Alert className=\"success\" message=\"Success\" />,\n        });\n        window.location.href = rsp.data.payload.paymentUrl;\n      })\n      .catch((err) => {\n        this.setState({\n          addMessage: (\n            <Alert className=\"danger\" message=\"Error while adding balance.\" />\n          ),\n        });\n      });\n  };\n\n  render() {\n    const { loader, addMessage, access, balanceHistory, pager } = this.state;\n\n    return (\n      <div className=\"main-content\">\n        <Header pretitle=\"Overview\" title=\"Balance\" />\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"password\">Available Balance</label>\n                  </div>\n                  <h1 className=\"display-1 text-success\">\n                    ${access?.balance?.toFixed(2)}\n                  </h1>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h3 htmlFor=\"password\" className=\"text-center mb-3\">\n                    Add Balance\n                  </h3>\n                  <form onSubmit={this.addBalance}>\n                    {addMessage}\n                    <div className=\"form-group\">\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        name=\"amount\"\n                        placeholder=\"Enter amount\"\n                        required\n                      />\n                    </div>\n                    <div className=\"form-group mb-0\">\n                      <button type=\"submit\" className=\"btn btn-primary\">\n                        Add Balance {loader}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-12\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"table-responsive\">\n                    <table className=\"table table-sm table-nowrap card-table\">\n                      <thead>\n                        <tr>\n                          <th>\n                            <Link to=\"#\" className=\"text-muted\">\n                              ID\n                            </Link>\n                          </th>\n                          <th>\n                            <Link to=\"#\" className=\"text-muted\">\n                              Amount\n                            </Link>\n                          </th>\n                          <th>\n                            <Link to=\"#\" className=\"text-muted\">\n                              Type\n                            </Link>\n                          </th>\n\n                          {/* <th>\n                            <Link to=\"#\" className=\"text-muted\">\n                              Payment Method\n                            </Link>\n                          </th> */}\n                          <th>\n                            <Link to=\"#\" className=\"text-muted\">\n                              Status\n                            </Link>\n                          </th>\n                          <th>\n                            <Link to=\"#\" className=\"text-muted\">\n                              Date\n                            </Link>\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {balanceHistory.map((balance) => (\n                          <tr key={balance.id}>\n                            <td>{balance.id}</td>\n                            <td>${balance.amount.toFixed(2)}</td>\n                            <td>\n                              {balance.type === \"in\" ? (\n                                <span className=\"badge bg-success\">CREDIT</span>\n                              ) : (\n                                <span className=\"badge bg-success\">DEDIT</span>\n                              )}\n                            </td>\n                            {/* <td>{balance.paymentMethod}</td> */}\n                            <td>\n                              {balance.status ? (\n                                <span className=\"badge bg-success\">Paid</span>\n                              ) : (\n                                <span className=\"badge bg-danger\">\n                                  Not Paid\n                                </span>\n                              )}\n                            </td>\n                            <td>\n                              {new Date(balance.createdAt).toLocaleDateString()}\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n              <nav className=\"mt-3\">\n                <ul className=\"pagination justify-content-center\">\n                  {pager.page > 1 && (\n                    <li\n                      className=\"page-item bg-light rounded\"\n                      onClick={() =>\n                        this.readHistory(pager.page - 1, pager.search)\n                      }\n                    >\n                      <Link to=\"#\" className=\"page-link\">\n                        Previous\n                      </Link>\n                    </li>\n                  )}\n\n                  {pager.page > 1 && (\n                    <li\n                      className=\"page-item bg-light rounded\"\n                      onClick={() =>\n                        this.readHistory(pager.page - 1, pager.search)\n                      }\n                    >\n                      <Link to=\"#\" className=\"page-link\">\n                        {pager.page - 1}\n                      </Link>\n                    </li>\n                  )}\n\n                  <li className=\"page-item bg-primary rounded\">\n                    <Link to=\"#\" className=\"page-link\">\n                      {pager.page}\n                    </Link>\n                  </li>\n\n                  {pager.totalPage > pager.page && (\n                    <li\n                      className=\"page-item bg-light rounded\"\n                      onClick={() => this.readHistory(pager.next, pager.search)}\n                    >\n                      <Link to=\"#\" className=\"page-link\">\n                        {pager.page + 1}\n                      </Link>\n                    </li>\n                  )}\n\n                  {pager.totalPage > pager.page && (\n                    <li\n                      className=\"page-item bg-light rounded\"\n                      onClick={() =>\n                        this.readHistory(pager.page + 1, pager.search)\n                      }\n                    >\n                      <Link to=\"#\" className=\"page-link\">\n                        Next\n                      </Link>\n                    </li>\n                  )}\n                </ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function Modal(props) {\n  return (\n    <div className=\"modal fade\" id={props.id} style={props.style}>\n      <div className={props.className + \" modal-dialog modal-dialog-centered\"}>\n        <div className=\"modal-content shadow-sm\">\n          <div className=\"modal-header p-4 border-0\">\n            <h3 className=\"pb-0 mb-0\">{props.title}</h3>\n            <span\n              type=\"button\"\n              className=\"close text-danger\"\n              data-bs-dismiss=\"modal\"\n              aria-label=\"Close\"\n              id=\"close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </span>\n          </div>\n          {props.children}\n        </div>\n      </div>\n    </div>\n  );\n}\n","export default function TopCard(props) {\n  return (\n    <div className={\"col-12 col-lg-\" + props.col || \"6\"}>\n      {/*\"col-xl\"*/}\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <div className=\"row align-items-center\">\n            <div className=\"col\">\n              <h6 className=\"text-uppercase text-muted mb-2\">{props.title}</h6>\n              <span className=\"h2 mb-0\">{props.value}</span>\n            </div>\n            <div className=\"col-auto\">\n              <span className={\"h2 text-muted mb-0 fe \" + props.icon}></span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { Fragment, PureComponent } from \"react\";\nimport Header from \"../components/Header\";\nimport axios from \"axios\";\nimport { server, config } from \"../env\";\nimport Loader from \"../components/Loader\";\nimport Alert from \"../components/Alert\";\nimport Modal from \"../components/Modal\";\nimport { Link } from \"react-router-dom\";\nimport TopCard from \"../components/TopCard\";\n\nexport default class Barcodes extends PureComponent {\n  state = {\n    barcodes: [],\n    duplicateBarcodes: [],\n    page: 1,\n    totalPages: 1,\n    loader: \"\",\n    stats: {},\n\n    uploadLoader: \"\",\n    uploadMessage: \"\",\n\n    selectedBarcodes: [],\n    type: \"\",\n    query: \"\",\n    queryLoader: \"\",\n\n    total: 0,\n    uploaded: 0,\n  };\n\n  componentDidMount = () => {\n    this.readBarcodes();\n  };\n\n  readBarcodes = async (page = 1, query = this.state.query) => {\n    this.setState({\n      page,\n      loader: <Loader />,\n    });\n    await axios\n      .get(server + \"/api/admin/read-barcodes?page=\" + page + query, config)\n      .then((res) => {\n        this.setState({\n          barcodes: res.data.payload.barcodes,\n          totalPages: Math.ceil(res.data.payload.totalBarcodes / 20),\n          stats: res.data.payload.stats,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  upload = async (e) => {\n    e.preventDefault();\n\n    var barcodes = e.target.barcodes.value.split(\"\\n\");\n\n    this.setState({\n      uploadLoader: <Loader />,\n      total: barcodes.length,\n      uploaded: 0,\n    });\n\n    await axios\n      .post(\n        server + \"/api/admin/upload-barcodes\",\n        {\n          type: e.target.type.value,\n          barcodes: barcodes,\n        },\n        config\n      )\n      .then((rsp) => {\n        this.setState({\n          duplicateBarcodes: rsp.data.payload,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    this.setState({\n      uploaded: this.state.uploaded + 1,\n    });\n\n    this.readBarcodes(1);\n\n    this.setState({\n      uploadLoader: \"\",\n      uploadMessage: (\n        <Alert message=\"Barcodes added successfully.\" className=\"success\" />\n      ),\n    });\n  };\n\n  selectBarcodes = (e) => {\n    const selectedBarcodes = [...this.state.selectedBarcodes];\n    if (e.target.checked) {\n      selectedBarcodes.push(parseInt(e.target.value));\n    } else {\n      selectedBarcodes.splice(selectedBarcodes.indexOf(e.target.value), 1);\n    }\n    this.setState({ selectedBarcodes });\n  };\n\n  deleteBarcodes = async () => {\n    const { selectedBarcodes } = this.state;\n    if (selectedBarcodes.length > 0) {\n      this.setState({\n        loader: <Loader />,\n      });\n      await axios\n        .post(\n          server + \"/api/admin/delete-barcodes\",\n          {\n            barcodeIds: selectedBarcodes,\n          },\n          config\n        )\n        .then((res) => {\n          this.readBarcodes(1);\n          this.setState({\n            loader: \"\",\n            selectedBarcodes: [],\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      this.deleteAllBarcodes(this.state.type);\n    }\n  };\n\n  deleteAllBarcodes = async (type) => {\n    this.setState({\n      loader: <Loader />,\n    });\n    await axios\n      .post(server + \"/api/admin/delete-all-barcodes/\" + type, {}, config)\n      .then((res) => {\n        this.readBarcodes(1);\n        this.setState({\n          loader: \"\",\n          selectedBarcodes: [],\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  search = async (e) => {\n    e.preventDefault();\n\n    this.setState({\n      queryLoader: <Loader />,\n    });\n\n    var query = \"&\";\n\n    if (e.target.search.value) {\n      query += \"search=\" + e.target.search.value;\n    }\n    if (e.target.type.value) {\n      query += \"&type=\" + e.target.type.value;\n    }\n    if (e.target.status.value) {\n      query += \"&status=\" + e.target.status.value;\n    }\n\n    await this.readBarcodes(1, query);\n\n    this.setState({\n      query,\n      queryLoader: \"\",\n    });\n  };\n\n  render() {\n    const { totalPages, page, barcodes, stats } = this.state;\n    const { uploadLoader, uploadMessage, duplicateBarcodes } = this.state;\n    const { selectedBarcodes } = this.state;\n    const { total, uploaded } = this.state;\n\n    return (\n      <div className=\"main-content\">\n        <Header pretitle=\"Overview\" title=\"Barcodes\" />\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <TopCard\n              title=\"Priority Left\"\n              value={stats.totalPriorityBarcodes}\n              icon=\"fe-tag\"\n              col={4}\n            />\n            <TopCard\n              title=\"Express Left\"\n              value={stats.totalExpressBarcodes}\n              icon=\"fe-tag\"\n              col={4}\n            />\n            <TopCard\n              title=\"First Class Left\"\n              value={stats.totalFirstClassBarcodes}\n              icon=\"fe-tag\"\n              col={4}\n            />\n          </div>\n          <div className=\"d-flex justify-content-between mb-3 w-100\">\n            <div>\n              <button\n                className=\"btn btn-primary me-2\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#uploadModal\"\n                onClick={() =>\n                  this.setState({\n                    duplicateBarcodes: [],\n                  })\n                }\n              >\n                Upload Barcodes\n              </button>\n\n              <button\n                className=\"btn btn-danger\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#deleteConfirmationModal\"\n              >\n                Delete Barcodes\n              </button>\n            </div>\n            <div>\n              <form className=\"d-flex\" onSubmit={this.search}>\n                <input\n                  type=\"text\"\n                  name=\"search\"\n                  id=\"search\"\n                  className=\"bg-transparent border border-primary rounded me-2 px-3 text-white\"\n                  placeholder=\"Search code\"\n                />\n\n                <select\n                  name=\"type\"\n                  className=\"bg-transparent border border-primary rounded me-2 px-3\"\n                  style={{\n                    color: \"gray\",\n                  }}\n                >\n                  <option value=\"all\">All Barcodes</option>\n                  <option value=\"priority\">Priority</option>\n                  <option value=\"express\">Express</option>\n                  <option value=\"firstclass\">First Class</option>\n                </select>\n\n                <select\n                  name=\"status\"\n                  className=\"bg-transparent border border-primary rounded me-2 px-3\"\n                  style={{\n                    color: \"gray\",\n                  }}\n                >\n                  <option value=\"\">Good and Bad Status</option>\n                  <option value=\"good\">Good</option>\n                  <option value=\"bad\">Bad</option>\n                </select>\n\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Search\n                </button>\n              </form>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card\">\n                <div className=\"table-responsive\">\n                  <table className=\"table table-sm table-nowrap card-table\">\n                    <thead>\n                      <tr>\n                        <th>Select</th>\n                        {/* <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            ID\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Username\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Email\n                          </Link>\n                        </th> */}\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Code\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Type\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Status\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Date\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Action\n                          </Link>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"list\">\n                      {barcodes.map((barcode, index) => (\n                        <tr key={barcode.id}>\n                          <td>\n                            <input\n                              className=\"form-check-input\"\n                              type=\"checkbox\"\n                              value={barcode.id}\n                              onChange={this.selectBarcodes}\n                            />\n                          </td>\n                          {/* <td>{barcode.id}</td>\n                          <td>{barcode.adminName}</td>\n                          <td>{barcode.adminEmail}</td> */}\n                          <td>{barcode.ocrCode}</td>\n                          <td>{barcode.type.toUpperCase()}</td>\n                          <td>\n                            {barcode.status === \"bad\" ? (\n                              <span className=\"badge bg-danger\">BAD</span>\n                            ) : (\n                              <span className=\"badge bg-success\">GOOD</span>\n                            )}\n                          </td>\n                          <td>{new Date(barcode.createdAt).toDateString()}</td>\n                          <td>\n                            <button\n                              className=\"btn btn-danger btn-sm\"\n                              onClick={() => {\n                                this.setState(\n                                  {\n                                    selectedBarcodes: [barcode.id],\n                                  },\n                                  () => {\n                                    this.deleteBarcodes();\n                                  }\n                                );\n                              }}\n                            >\n                              Delete\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n              <nav aria-label=\"Page navigation example\">\n                <ul className=\"pagination justify-content-center\">\n                  {page > 1 ? (\n                    <li\n                      className=\"page-item\"\n                      onClick={() => this.readBarcodes(page - 1)}\n                    >\n                      <Link to=\"#\" className=\"page-link\">\n                        Previous\n                      </Link>\n                    </li>\n                  ) : (\n                    \"\"\n                  )}\n                  <li className=\"page-item\">\n                    <Link to=\"#\" className=\"page-link\" href=\"#\">\n                      {page}\n                    </Link>\n                  </li>\n                  {page < totalPages ? (\n                    <li\n                      className=\"page-item\"\n                      onClick={() => this.readBarcodes(page + 1)}\n                    >\n                      <Link to=\"#\" className=\"page-link\" href=\"#\">\n                        Next\n                      </Link>\n                    </li>\n                  ) : (\n                    \"\"\n                  )}\n                </ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n\n        {/* upload modal */}\n        <Modal id=\"uploadModal\" title=\"Upload Barcodes\">\n          <div className=\"modal-body\">\n            <form onSubmit={this.upload}>\n              {uploadMessage}\n\n              {uploadMessage && duplicateBarcodes.length > 0 && (\n                <div className=\"form-group\">\n                  {/* duplicateBarcodes */}\n                  <div className=\"alert alert-danger\">\n                    <strong>\n                      {duplicateBarcodes.length} Duplicate/Bad Barcodes\n                    </strong>\n                    <ul>\n                      {duplicateBarcodes.map((barcode, index) => (\n                        <li key={index}>\n                          {barcode.barcode} -{\" \"}\n                          {new Date(barcode.lastDate).toDateString()}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"form-group\">\n                <label htmlFor=\"barcodes\">Barcodes Type</label>\n                <select name=\"type\" id=\"type\" className=\"form-control\">\n                  <option value=\"priority\">Priority</option>\n                  <option value=\"express\">Express</option>\n                  <option value=\"firstclass\">First Class</option>\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"barcodes\">Barcodes</label>\n                <textarea\n                  name=\"barcodes\"\n                  id=\"\"\n                  cols=\"30\"\n                  rows=\"10\"\n                  className=\"form-control\"\n                ></textarea>\n              </div>\n              <div className=\"form-group\">\n                <button className=\"btn btn-primary\">\n                  <i className=\"fa fa-upload\"></i> Upload ({total})\n                  {uploadLoader}\n                </button>\n              </div>\n            </form>\n          </div>\n        </Modal>\n\n        {/* delete modal */}\n        <Modal id=\"deleteConfirmationModal\" title=\"Delete Barcodes\">\n          <div className=\"modal-body  text-center\">\n            <h3>Are you sure you want to delete?</h3>\n\n            {selectedBarcodes.length === 0 && (\n              <div className=\"form-group mb-3\">\n                <label htmlFor=\"\">Choose Barcode Type</label>\n                <select\n                  name=\"type\"\n                  id=\"type\"\n                  className=\"form-control\"\n                  onChange={(e) =>\n                    this.setState({\n                      selectedBarcodes: [],\n                      type: e.target.value,\n                    })\n                  }\n                >\n                  <option value=\"\">Select Type</option>\n                  <option value=\"priority\">Priority</option>\n                  <option value=\"express\">Express</option>\n                  <option value=\"firstclass\">First Class</option>\n                </select>\n              </div>\n            )}\n\n            <div className=\"form-group mt-4\">\n              <button className=\"btn btn-primary m-2\" data-bs-dismiss=\"modal\">\n                Go back\n              </button>\n              <button\n                className=\"btn btn-danger\"\n                onClick={this.deleteBarcodes}\n                data-bs-dismiss=\"modal\"\n              >\n                Continue\n              </button>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Header from \"../components/Header\";\nimport { Link } from \"react-router-dom\";\nimport TopCard from \"../components/TopCard\";\nimport axios from \"axios\";\nimport { server, config } from \"../env\";\nimport { LineChart } from \"../tools/helper\";\n\nexport default class Dashboard extends PureComponent {\n  state = {\n    stats: {\n      barcodes: 0,\n      labels: 0,\n    },\n    chart: [],\n  };\n\n  componentDidMount = async () => {\n    await axios(server + \"/api/user/access\", config)\n      .then((rsp) => {\n        if (!rsp.data.payload.superAccess) {\n          this.props.history.push(\"/barcodes\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    this.readStats();\n  };\n\n  readStats = async (filter = \"t\") => {\n    const e = document.getElementById(\"labels\");\n    var canvas = document.createElement(\"CANVAS\");\n    while (e.firstChild) {\n      e.removeChild(e.firstChild);\n    }\n    e.appendChild(canvas);\n    canvas.classList.add(\"chart-canvas\");\n    await axios(server + \"/api/user/dashboard?filter=\" + filter, config).then(\n      (rsp) => {\n        this.setState({\n          stats: rsp.data.payload.stats,\n          chart: rsp.data.payload.chart,\n        });\n        const data = {\n          labels: rsp.data.payload.chart.map((e) => e.label).reverse(),\n          datasets: [\n            {\n              label: \"Earned\",\n              data: rsp.data.payload.chart.map((e) => e.count).reverse(),\n            },\n          ],\n        };\n        LineChart(canvas, data);\n      }\n    );\n  };\n\n  render() {\n    const { stats } = this.state;\n    return (\n      <div className=\"main-content\">\n        <Header pretitle=\"Overview\" title=\"Dashboard\" />\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <TopCard\n              title=\"Total Labels\"\n              value={stats.labels}\n              icon=\"fe-tag\"\n              col={6}\n            />\n            <TopCard\n              title=\"Available Balance\"\n              value={\"$\" + (stats.balance || 0)}\n              icon=\"fe-code\"\n              col={6}\n            />\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h4 className=\"card-header-title\">Labels generated</h4>\n                  <ul className=\"nav nav-tabs nav-tabs-sm card-header-tabs\">\n                    <li className=\"nav-item\">\n                      <Link\n                        to=\"#\"\n                        className=\"nav-link active\"\n                        data-bs-toggle=\"tab\"\n                        onClick={() => this.readStats(\"t\")}\n                      >\n                        Today\n                      </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                      <Link\n                        to=\"#\"\n                        className=\"nav-link\"\n                        data-bs-toggle=\"tab\"\n                        onClick={() => this.readStats(\"w\")}\n                      >\n                        Week\n                      </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                      <Link\n                        to=\"#\"\n                        className=\"nav-link\"\n                        data-bs-toggle=\"tab\"\n                        onClick={() => this.readStats(\"m\")}\n                      >\n                        Month\n                      </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                      <Link\n                        to=\"#\"\n                        className=\"nav-link\"\n                        data-bs-toggle=\"tab\"\n                        onClick={() => this.readStats(\"y\")}\n                      >\n                        Year\n                      </Link>\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"card-body\">\n                  <div className=\"chart\" id=\"labels\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Header from \"../components/Header\";\nimport axios from \"axios\";\nimport { server, config } from \"../env\";\nimport Loader from \"../components/Loader\";\nimport Alert from \"../components/Alert\";\nimport Modal from \"../components/Modal\";\nimport { Link } from \"react-router-dom\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class Labels extends PureComponent {\n  state = {\n    labels: [],\n    page: 1,\n    totalPages: 1,\n    loader: \"\",\n    label: {},\n    message: \"\",\n\n    date: new Date(),\n    type: \"priority\",\n\n    fromStreetNumber: \"\",\n    fromStreetNumber2: \"\",\n    fromZip: \"\",\n    fromCity: \"\",\n    fromState: \"\",\n    fromCountry: \"\",\n\n    toStreetNumber: \"\",\n    toStreetNumber2: \"\",\n    toZip: \"\",\n    toCity: \"\",\n    toState: \"\",\n    toCountry: \"\",\n\n    isFromAddressVerified: false,\n    isToAddressVerified: false,\n    apiKey: \"\",\n    searchLoader: \"\",\n  };\n\n  componentDidMount = () => {\n    this.readAccess();\n    this.readLabels();\n  };\n\n  readAccess = async () => {\n    await axios\n      .get(server + \"/api/user/access\", config)\n      .then((rsp) => {\n        this.setState({ apiKey: rsp.data.payload?.apiKey });\n      })\n      .catch((err) => {});\n  };\n\n  readLabels = async (page = 1, search = \"\") => {\n    this.setState({\n      page,\n      loader: <Loader />,\n      searchLoader: <Loader />,\n    });\n    await axios\n      .get(server + `/api/label/read?page=${page}&search=${search}`, config)\n      .then((res) => {\n        this.setState({\n          labels: res.data.payload.labels,\n          totalPages: Math.ceil(res.data.payload.totalLabels / 20),\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    this.setState({\n      loader: \"\",\n      searchLoader: \"\",\n    });\n  };\n\n  generateLabel = async (e) => {\n    e.preventDefault();\n    this.setState({\n      loader: <Loader />,\n    });\n\n    const form = new FormData(e.target);\n    const data = {};\n    form.forEach((value, key) => {\n      data[key] = value;\n    });\n    data.date = this.state.date;\n\n    // format date in MM-DD-YYYY format\n    const date = new Date(data.date);\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n\n    data.date = month + \"-\" + day + \"-\" + year;\n\n    await axios\n      .post(server + \"/api/label/generate\", data, {\n        headers: {\n          \"x-api-key\": this.state.apiKey,\n        },\n      })\n      .then((res) => {\n        this.setState({\n          message: <Alert className=\"success\" message={res.data.message} />,\n        });\n        this.readLabels();\n      })\n      .catch((err) => {\n        this.setState({\n          message: (\n            <Alert className=\"danger\" message={err.response?.data?.message} />\n          ),\n        });\n      });\n\n    this.setState({\n      loader: \"\",\n    });\n  };\n\n  onChange = (e) => {\n    const { name, value } = e.target;\n    if (name === \"toZip\" || name === \"fromZip\") {\n      var code = \"\";\n      if (value.includes(\"-\") && value.length > 5) {\n        code = value;\n      } else if (value.includes(\"-\") && value.length <= 5) {\n        code = value.replaceAll(\"-\", \"\");\n      } else if (!value.includes(\"-\") && value.length > 5) {\n        code = value.substring(0, 5) + \"-\" + value.substring(5, value.length);\n      } else if (!value.includes(\"-\") && value.length < 5) {\n        code = value;\n      } else {\n        code = value;\n      }\n\n      this.setState({\n        [name]: code,\n      });\n    } else {\n      this.setState({\n        [e.target.name]: e.target.value,\n      });\n    }\n  };\n\n  verifyAddress = async (street1, street2, city, state, zip, type = \"from\") => {\n    const obj = {};\n    if (street1) obj.street1 = street1;\n    if (street2) obj.street2 = street2;\n    if (city) obj.city = city;\n    if (state) obj.state = state;\n    if (zip) obj.zip = zip;\n\n    if (type === \"from\") {\n      this.setState({\n        isFromAddressVerified: false,\n      });\n    }\n\n    this.setState({\n      message: <Alert className=\"info\" message=\"Processing...\" />,\n    });\n\n    await axios\n      .post(\n        server + \"/api/usps/address\",\n        {\n          ...obj,\n        },\n        config\n      )\n      .then((res) => {\n        if (res.data.payload) {\n          if (type === \"from\") {\n            this.setState({\n              isFromAddressVerified: true,\n            });\n          } else {\n            this.setState({\n              isToAddressVerified: true,\n            });\n          }\n        } else {\n          if (type === \"from\") {\n            this.setState({\n              isFromAddressVerified: false,\n            });\n          } else {\n            this.setState({\n              isToAddressVerified: false,\n            });\n          }\n        }\n      })\n      .catch((err) => {});\n    this.setState({\n      message: \"\",\n    });\n  };\n\n  zipCodeLookup = async (city, state, street1, street2, type = \"from\") => {\n    console.log(city, state, street1, street2);\n    if (!city) return;\n    if (!state) return;\n    if (!street1) return;\n\n    const obj = {};\n    if (street1) obj.street1 = street1;\n    if (street2) obj.street2 = street2;\n    if (city) obj.city = city;\n    if (state) obj.state = state;\n\n    this.setState({\n      message: <Alert className=\"info\" message=\"Processing...\" />,\n    });\n\n    var result = {};\n    await axios\n      .post(\n        server + \"/api/usps/zipcode\",\n        {\n          ...obj,\n        },\n        config\n      )\n      .then((res) => {\n        if (res.data.payload) {\n          result = res.data.payload;\n          this.setState({\n            message: \"\",\n          });\n        } else {\n          this.setState({\n            message: <Alert className=\"danger\" message=\"Invalid Address\" />,\n          });\n        }\n      })\n      .catch((err) => {\n        this.setState({\n          message: <Alert className=\"danger\" message=\"Invalid Address\" />,\n        });\n      });\n\n    const zip = result.zip;\n\n    console.log(zip);\n\n    if (type === \"from\" && result) {\n      this.setState({\n        fromZip: zip?.endsWith(\"-\") ? zip?.slice(0, 5) : zip,\n      });\n    }\n    if (type === \"to\" && result) {\n      this.setState({\n        toZip: zip?.endsWith(\"-\") ? zip?.slice(0, 5) : zip,\n      });\n    }\n  };\n\n  cityStateLookup = async (zip, type = \"form\") => {\n    if (zip.length !== 5) return;\n\n    var result;\n    const obj = {\n      zip: zip.replaceAll(\"-\", \"\"),\n    };\n\n    await axios\n      .post(\n        server + \"/api/usps/city-state\",\n        {\n          ...obj,\n        },\n        config\n      )\n      .then((res) => {\n        if (res.data.payload) {\n          result = res.data.payload;\n          console.log(res.data.payload);\n        }\n      })\n      .catch((err) => {});\n\n    if (type === \"from\") {\n      this.setState({\n        fromCity: result.city,\n        fromState: result.state,\n      });\n    }\n    if (type === \"to\") {\n      this.setState({\n        toCity: result.city,\n        toState: result.state,\n      });\n    }\n  };\n\n  render() {\n    const { totalPages, page, date, labels, label } = this.state;\n    const { loader, message, searchLoader } = this.state;\n\n    const {\n      type,\n      fromStreetNumber,\n      fromStreetNumber2,\n      fromZip,\n      fromCity,\n      fromState,\n      fromCountry,\n\n      toStreetNumber,\n      toStreetNumber2,\n      toZip,\n      toCity,\n      toState,\n      toCountry,\n    } = this.state;\n\n    const { isFromAddressVerified, isToAddressVerified } = this.state;\n\n    return (\n      <div className=\"main-content\">\n        <Header pretitle=\"Overview\" title=\"Labels\" />\n        <div className=\"container-fluid\">\n          <div className=\"d-flex justify-content-end mb-3 w-100\">\n            {/* <button\n              className=\"btn btn-primary\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#generateLabel\"\n            >\n              Generate Label\n            </button> */}\n            <div className=\"form-group m-0\">\n              <input\n                type=\"text\"\n                className=\"form-control w-100 border\"\n                placeholder=\"Search...\"\n                onChange={(e) => this.readLabels(1, e.target.value)}\n              />\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card\">\n                <div className=\"table-responsive\">\n                  <table className=\"table table-sm table-nowrap card-table\">\n                    <thead>\n                      <tr>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            ID\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Type\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Weight\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            From Name\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Tracking CODE\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Date\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Status\n                          </Link>\n                        </th>\n                        {/* <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Summery\n                          </Link>\n                        </th> */}\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Action\n                          </Link>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"list\">\n                      {labels.map((label, index) => (\n                        <tr key={label.id}>\n                          <td>{label.id}</td>\n                          <td>{label.type}</td>\n                          <td>{label.weight} lb</td>\n                          <td>{label.fromName} lb</td>\n                          <td>{label.barcodeOCR}</td>\n                          <td>{new Date(label.createdAt).toDateString()}</td>\n                          <td>\n                            {label.status ? (\n                              <span className=\"badge bg-success\">\n                                Delivered\n                              </span>\n                            ) : JSON.parse(label.statusMessage || \"[]\")\n                                .length === 0 ? (\n                              <span className=\"badge bg-warning\">\n                                Awaiting scan or not yet in system\n                              </span>\n                            ) : (\n                              <span className=\"badge bg-info\">In Progress</span>\n                            )}\n                          </td>\n                          {/* <td>\n                            {JSON.parse(label.statusMessage).length > 0 &&\n                              JSON.parse(label.statusMessage)[0]}\n                          </td> */}\n\n                          <td>\n                            <button\n                              className=\"btn btn-sm btn-primary me-1\"\n                              data-bs-toggle=\"modal\"\n                              data-bs-target=\"#viewLabel\"\n                              onClick={() =>\n                                this.setState({\n                                  label: { ...label },\n                                })\n                              }\n                            >\n                              View\n                            </button>\n                            <a\n                              className=\"btn btn-sm btn-primary\"\n                              href={server + label.pdfPath}\n                              download\n                            >\n                              Download PDF\n                            </a>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n              <nav aria-label=\"Page navigation example\">\n                <ul className=\"pagination justify-content-center\">\n                  {page > 1 ? (\n                    <li\n                      className=\"page-item\"\n                      onClick={() => this.readLabels(page - 1)}\n                      style={{\n                        cursor: \"pointer\",\n                      }}\n                    >\n                      <Link\n                        to=\"#\"\n                        className=\"page-link\"\n                        onClick={() => this.readLabels(page - 1)}\n                      >\n                        Previous\n                      </Link>\n                    </li>\n                  ) : (\n                    \"\"\n                  )}\n                  <li className=\"page-item\">\n                    <Link to=\"#\" className=\"page-link\" href=\"#\">\n                      {searchLoader || page}\n                    </Link>\n                  </li>\n                  {page < totalPages ? (\n                    <li\n                      className=\"page-item\"\n                      onClick={() => this.readLabels(page + 1)}\n                      style={{\n                        cursor: \"pointer\",\n                      }}\n                    >\n                      <Link\n                        to=\"#\"\n                        className=\"page-link\"\n                        onClick={() => this.readLabels(page + 1)}\n                      >\n                        Next\n                      </Link>\n                    </li>\n                  ) : (\n                    \"\"\n                  )}\n                </ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n\n        <Modal id=\"generateLabel\" title=\"Read Label\" className=\"modal-lg\">\n          <div className=\"modal-body\">\n            <form onSubmit={this.generateLabel}>\n              {!isFromAddressVerified || !isToAddressVerified ? (\n                <Alert\n                  className=\"danger\"\n                  message=\"Addresses are not verified.\"\n                />\n              ) : (\n                <Alert className=\"info\" message=\"Addresses are  verified.\" />\n              )}\n              {message}\n              {/* Top ROw */}\n              <div className=\"row\">\n                <div className=\"col-md-4\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">Type</label>\n                    <select\n                      name=\"type\"\n                      id=\"type\"\n                      className=\"form-control\"\n                      required\n                      onChange={(e) =>\n                        this.setState({\n                          type: e.target.value,\n                        })\n                      }\n                    >\n                      <option value=\"priority\">Priority</option>\n                      <option value=\"express\">Express</option>\n                      <option value=\"firstclass\">First Class</option>\n                      <option value=\"signature\">Signature</option>\n                    </select>\n                  </div>\n                </div>\n                <div className=\"col-md-4\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">\n                      Weight ({type === \"firstclass\" ? \"oz\" : \"lb\"})\n                    </label>\n                    <input\n                      type=\"number\"\n                      name=\"weight\"\n                      id=\"weight\"\n                      className=\"form-control\"\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-4\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">Date</label>\n                    <DatePicker\n                      selected={date}\n                      onChange={(date) => this.setState({ date })}\n                      className=\"form-control\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                {/* from name */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">From Name</label>\n                    <input\n                      type=\"text\"\n                      name=\"fromName\"\n                      id=\"fromName\"\n                      className=\"form-control\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* fromRefNumber */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">From Reference Number</label>\n                    <input\n                      type=\"text\"\n                      name=\"fromRefNumber\"\n                      id=\"fromRefNumber\"\n                      className=\"form-control\"\n                    />\n                  </div>\n                </div>\n\n                {/* fromStreetNumber */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">From Street Number</label>\n                    <input\n                      type=\"text\"\n                      name=\"fromStreetNumber\"\n                      id=\"fromStreetNumber\"\n                      className=\"form-control\"\n                      value={fromStreetNumber}\n                      onChange={(e) => {\n                        this.onChange(e);\n                        this.zipCodeLookup(\n                          fromCity,\n                          fromState,\n                          e.target.value,\n                          fromStreetNumber2,\n                          fromZip,\n                          \"from\"\n                        );\n                        this.verifyAddress(\n                          e.target.value,\n                          fromStreetNumber2,\n                          fromCity,\n                          fromState,\n                          \"from\"\n                        );\n                      }}\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* fromStreetNumber2 */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">From Street Number 2</label>\n                    <input\n                      type=\"text\"\n                      name=\"fromStreetNumber2\"\n                      id=\"fromStreetNumber2\"\n                      className=\"form-control\"\n                      value={fromStreetNumber2}\n                      onChange={(e) => {\n                        this.onChange(e);\n                        this.zipCodeLookup(\n                          fromCity,\n                          fromState,\n                          fromStreetNumber,\n                          e.target.value,\n                          fromZip,\n                          \"from\"\n                        );\n                        this.verifyAddress(\n                          fromStreetNumber,\n                          e.target.value,\n                          fromCity,\n                          fromState,\n                          \"from\"\n                        );\n                      }}\n                    />\n                  </div>\n                </div>\n\n                {/* fromCity */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">From City</label>\n                    <input\n                      type=\"text\"\n                      name=\"fromCity\"\n                      id=\"fromCity\"\n                      className=\"form-control\"\n                      value={fromCity}\n                      onChange={(e) => {\n                        this.onChange(e);\n                        this.zipCodeLookup(\n                          e.target.value,\n                          fromState,\n                          fromStreetNumber,\n                          fromStreetNumber2,\n                          \"from\"\n                        );\n                        this.verifyAddress(\n                          fromStreetNumber,\n                          fromStreetNumber2,\n                          e.target.value,\n                          fromState,\n                          fromZip,\n                          \"from\"\n                        );\n                      }}\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* fromState */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">From State</label>\n                    <input\n                      type=\"text\"\n                      name=\"fromState\"\n                      id=\"fromState\"\n                      className=\"form-control\"\n                      value={fromState}\n                      onChange={(e) => {\n                        this.onChange(e);\n                        this.zipCodeLookup(\n                          fromCity,\n                          e.target.value,\n                          fromStreetNumber,\n                          fromStreetNumber2,\n                          fromZip,\n                          \"from\"\n                        );\n                        this.verifyAddress(\n                          fromStreetNumber,\n                          fromStreetNumber2,\n                          fromCity,\n                          e.target.value,\n                          \"from\"\n                        );\n                      }}\n                      maxLength={2}\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* fromZip */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">From Zip</label>\n                    <input\n                      type=\"text\"\n                      name=\"fromZip\"\n                      id=\"fromZip\"\n                      value={fromZip}\n                      onChange={(e) => {\n                        this.onChange(e);\n                        this.cityStateLookup(e.target.value, \"from\");\n                        this.verifyAddress(\n                          fromStreetNumber,\n                          fromStreetNumber2,\n                          fromCity,\n                          fromState,\n                          e.target.value,\n                          \"from\"\n                        );\n                      }}\n                      className=\"form-control\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* fromCountry */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">From Country</label>\n                    <input\n                      type=\"text\"\n                      name=\"fromCountry\"\n                      id=\"fromCountry\"\n                      className=\"form-control\"\n                      value={fromCountry}\n                      onChange={this.onChange}\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* toName */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">To Name</label>\n                    <input\n                      type=\"text\"\n                      name=\"toName\"\n                      id=\"toName\"\n                      className=\"form-control\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* toRefNumber */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">To Reference Number</label>\n                    <input\n                      type=\"text\"\n                      name=\"toRefNumber\"\n                      id=\"toRefNumber\"\n                      className=\"form-control\"\n                    />\n                  </div>\n                </div>\n\n                {/* toStreetNumber */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">To Street Number</label>\n                    <input\n                      type=\"text\"\n                      name=\"toStreetNumber\"\n                      id=\"toStreetNumber\"\n                      className=\"form-control\"\n                      value={toStreetNumber}\n                      onChange={(e) => {\n                        this.onChange(e);\n                        this.zipCodeLookup(\n                          toCity,\n                          toState,\n                          e.target.value,\n                          toStreetNumber2,\n                          \"to\"\n                        );\n                        this.verifyAddress(\n                          e.target.value,\n                          toStreetNumber2,\n                          toCity,\n                          toState,\n                          toZip,\n                          \"to\"\n                        );\n                      }}\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* toStreetNumber2 */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">To Street Number 2</label>\n                    <input\n                      type=\"text\"\n                      name=\"toStreetNumber2\"\n                      id=\"toStreetNumber2\"\n                      className=\"form-control\"\n                      value={toStreetNumber2}\n                      onChange={(e) => {\n                        this.onChange(e);\n                        this.zipCodeLookup(\n                          toCity,\n                          toState,\n                          toStreetNumber,\n                          e.target.value,\n                          \"to\"\n                        );\n                        this.verifyAddress(\n                          toStreetNumber,\n                          e.target.value,\n                          toCity,\n                          toState,\n                          toZip,\n                          \"to\"\n                        );\n                      }}\n                    />\n                  </div>\n                </div>\n\n                {/* toCity */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">To City</label>\n                    <input\n                      type=\"text\"\n                      name=\"toCity\"\n                      id=\"toCity\"\n                      className=\"form-control\"\n                      value={toCity}\n                      onChange={(e) => {\n                        this.onChange(e);\n                        this.zipCodeLookup(\n                          e.target.value,\n                          toState,\n                          toStreetNumber,\n                          toStreetNumber2,\n                          \"to\"\n                        );\n                        this.verifyAddress(\n                          toStreetNumber,\n                          toStreetNumber2,\n                          e.target.value,\n                          toState,\n                          toZip,\n                          \"to\"\n                        );\n                      }}\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* toState */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">To State</label>\n                    <input\n                      type=\"text\"\n                      name=\"toState\"\n                      id=\"toState\"\n                      className=\"form-control\"\n                      value={toState}\n                      onChange={(e) => {\n                        this.onChange(e);\n                        this.zipCodeLookup(\n                          toCity,\n                          e.target.value,\n                          toStreetNumber,\n                          toStreetNumber2,\n                          \"to\"\n                        );\n                        this.verifyAddress(\n                          toStreetNumber,\n                          toStreetNumber2,\n                          toCity,\n                          e.target.value,\n                          toZip,\n                          \"to\"\n                        );\n                      }}\n                      maxLength={2}\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* toZip */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">To Zip</label>\n                    <input\n                      type=\"text\"\n                      name=\"toZip\"\n                      id=\"toZip\"\n                      className=\"form-control\"\n                      value={toZip}\n                      onChange={(e) => {\n                        this.onChange(e);\n                        this.cityStateLookup(e.target.value, \"to\");\n                        this.verifyAddress(\n                          toStreetNumber,\n                          toStreetNumber2,\n                          toCity,\n                          toState,\n                          e.target.value,\n                          \"to\"\n                        );\n                      }}\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* toCountry */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">To Country</label>\n                    <input\n                      type=\"text\"\n                      name=\"toCountry\"\n                      id=\"toCountry\"\n                      className=\"form-control\"\n                      value={toCountry}\n                      onChange={this.onChange}\n                      required\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-12\">\n                  <div className=\"form-group mb-3\">\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                      Generate Label {loader}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </Modal>\n\n        <Modal id=\"viewLabel\" title=\"Read Label\" className=\"modal-lg\">\n          <div className=\"modal-body\">\n            {/* table */}\n            <div className=\"table-responsive\">\n              <table className=\"table table-sm table-nowrap card-table\">\n                <thead>\n                  {Object.keys(label).map((key, index) => (\n                    <tr>\n                      <th key={index}>{key}</th>\n                      <th key={index}>\n                        {key === \"statusMessage\" ? (\n                          <ul>\n                            {JSON.parse(label[key] || \"[]\").length > 0 &&\n                              JSON.parse(label[key]).map((item) => (\n                                <li>{item}</li>\n                              ))}\n                          </ul>\n                        ) : (\n                          label[key]\n                        )}\n                      </th>\n                    </tr>\n                  ))}\n                </thead>\n              </table>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Header from \"../components/Header\";\nimport axios from \"axios\";\nimport { server, config } from \"../env\";\nimport Loader from \"../components/Loader\";\nimport Alert from \"../components/Alert\";\n\nexport default class Settings extends PureComponent {\n  state = {\n    loader: \"\",\n    loaderKey: \"\",\n    message: \"\",\n    messageKey: \"\",\n    access: {},\n  };\n\n  componentDidMount = async () => {\n    this.readAccess();\n  };\n\n  readAccess = async () => {\n    await axios\n      .get(server + \"/api/user/access\", config)\n      .then((rsp) => {\n        this.setState({ access: rsp.data.payload });\n      })\n      .catch((err) => {});\n  };\n\n  update = async (e) => {\n    e.preventDefault();\n\n    this.setState({\n      loader: <Loader />,\n    });\n\n    const params = {\n      password: e.target.password.value,\n    };\n\n    await axios\n      .post(server + \"/api/user/update-password\", params, config)\n      .then((rsp) => {\n        this.setState({\n          message: <Alert className=\"success\" message={rsp.data.message} />,\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          message: (\n            <Alert\n              className=\"danger\"\n              message={\n                err.response?.data.message || \"Error while updating password\"\n              }\n            />\n          ),\n        });\n      });\n    this.setState({\n      loader: \"\",\n    });\n  };\n\n  resetKey = async (e) => {\n    e.preventDefault();\n\n    this.setState({\n      loaderKey: <Loader />,\n    });\n\n    await axios\n      .post(server + \"/api/user/generateKey\", {}, config)\n      .then((rsp) => {\n        this.setState({\n          messageKey: (\n            <Alert className=\"success\" message=\"Key Reset Successful.\" />\n          ),\n        });\n        this.readAccess();\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          messageKey: (\n            <Alert className=\"danger\" message=\"Error resetting the key\" />\n          ),\n        });\n      });\n    this.setState({\n      loaderKey: \"\",\n    });\n  };\n\n  render() {\n    const { loader, loaderKey, message, messageKey, access } = this.state;\n\n    return (\n      <div className=\"main-content\">\n        <Header pretitle=\"Overview\" title=\"Settings\" />\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <form onSubmit={this.update}>\n                    {message}\n                    <div className=\"form-group\">\n                      <label htmlFor=\"password\">Password</label>\n                      <input\n                        type=\"password\"\n                        className=\"form-control\"\n                        id=\"password\"\n                        placeholder=\"New Password\"\n                        required\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <button type=\"submit\" className=\"btn btn-primary\">\n                        Update Password {loader}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <form onSubmit={this.resetKey}>\n                    {messageKey}\n                    <div className=\"form-group\">\n                      <label htmlFor=\"password\">API KEY</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={access.apiKey}\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <button type=\"submit\" className=\"btn btn-primary\">\n                        Reset Key {loaderKey}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Header from \"../components/Header\";\nimport axios from \"axios\";\nimport { server, config } from \"../env\";\nimport Loader from \"../components/Loader\";\nimport Alert from \"../components/Alert\";\nimport Modal from \"../components/Modal\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Stats extends PureComponent {\n  state = {\n    stats: [],\n    page: 1,\n    totalPages: 1,\n\n    loader: \"\",\n    message: \"\",\n  };\n\n  componentDidMount = () => {\n    this.readStats();\n  };\n\n  readStats = async () => {\n    await axios\n      .get(server + \"/api/admin/stats/read\", config)\n      .then((res) => {\n        this.setState({\n          stats: res.data.payload,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  updateStats = async (e) => {\n    e.preventDefault();\n    this.setState({\n      loader: <Loader />,\n    });\n    const form = e.target;\n    const params = [\n      {\n        attr: \"priority_weight\",\n        value: form.priority_weight.value,\n      },\n      {\n        attr: \"express_weight\",\n        value: form.express_weight.value,\n      },\n      {\n        attr: \"firstclass_weight\",\n        value: form.firstclass_weight.value,\n      },\n      {\n        attr: \"priority_minimum_stock\",\n        value: form.priority_minimum_stock.value,\n      },\n      {\n        attr: \"express_minimum_stock\",\n        value: form.express_minimum_stock.value,\n      },\n      {\n        attr: \"firstclass_minimum_stock\",\n        value: form.firstclass_minimum_stock.value,\n      },\n    ];\n\n    await axios\n      .post(server + \"/api/admin/stats/update\", { params }, config)\n      .then((res) => {\n        this.setState({\n          loader: \"\",\n          message: <Alert className=\"success\" message={res.data.message} />,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    const { stats } = this.state;\n    const { loader, message } = this.state;\n\n    return (\n      <div className=\"main-content\">\n        <Header pretitle=\"Overview\" title=\"Website Controls\" />\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <form onSubmit={this.updateStats}>\n                {message}\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <div className=\"row g-2\">\n                      <div className=\"card\">\n                        <div className=\"card-body\">\n                          {stats.map(\n                            (s, i) =>\n                              i < 3 && (\n                                <div className=\"col-md-12\">\n                                  <div className=\"form-group\">\n                                    <label htmlFor=\"\">\n                                      {s.attr\n                                        .replaceAll(\"_\", \" \")\n                                        .toUpperCase()}\n                                    </label>\n                                    <input\n                                      type=\"text\"\n                                      name={s.attr}\n                                      className=\"form-control\"\n                                      defaultValue={s.value}\n                                      required\n                                    />\n                                  </div>\n                                </div>\n                              )\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <div className=\"row g-2\">\n                      <div className=\"card\">\n                        <div className=\"card-body\">\n                          {stats.map(\n                            (s, i) =>\n                              i > 2 && (\n                                <div className=\"col-md-12\">\n                                  <div className=\"form-group\">\n                                    <label htmlFor=\"\">\n                                      {s.attr\n                                        .replaceAll(\"_\", \" \")\n                                        .toUpperCase()}\n                                    </label>\n                                    <input\n                                      type=\"text\"\n                                      name={s.attr}\n                                      className=\"form-control\"\n                                      defaultValue={s.value}\n                                      required\n                                    />\n                                  </div>\n                                </div>\n                              )\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit {loader}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { server, config } from \"../env\";\nimport axios from \"axios\";\n\nexport default class ApiRequests {\n  async getTickets(page, search = \"\") {\n    var data = [];\n    var error = false;\n\n    await axios\n      .post(\n        server + \"/api/ticket/read\",\n        {\n          page,\n          search,\n        },\n        config\n      )\n      .then((res) => {\n        data = res.data.payload;\n      })\n      .catch((err) => {\n        error = true;\n      });\n\n    return { data, error };\n  }\n\n  async getTicket(id) {\n    var data = {};\n    var error = false;\n\n    await axios\n      .get(server + \"/api/ticket/read/\" + id, config)\n      .then((res) => {\n        data = res.data.payload;\n      })\n      .catch((err) => {\n        error = true;\n      });\n\n    return { data, error };\n  }\n\n  async createTicket(data) {\n    var error = false;\n\n    await axios\n      .post(server + \"/api/ticket/create\", data, config)\n      .then((res) => {})\n      .catch((err) => {\n        error = true;\n      });\n\n    return error;\n  }\n\n  async sendTicketMessage(data) {\n    var error = false;\n\n    await axios\n      .post(server + \"/api/ticket/reply\", data, config)\n      .then((res) => {})\n      .catch((err) => {\n        error = true;\n      });\n\n    return error;\n  }\n\n  async setTicketStatus(data) {\n    var error = false;\n\n    var path = data.status === \"open\" ? \"/open/\" : \"/close/\";\n\n    await axios\n      .post(server + \"/api/ticket/\" + path + data.id, data, config)\n      .then((res) => {})\n      .catch((err) => {\n        error = true;\n      });\n\n    return error;\n  }\n\n  async getPricing() {\n    var data = [];\n    var error = false;\n\n    var path = \"/api/pricing/read\";\n\n    await axios\n      .get(server + path, config)\n      .then((res) => {\n        data = res.data.payload || [];\n      })\n      .catch((err) => {\n        error = true;\n      });\n\n    return { data, error };\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Header from \"../components/Header\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"../components/Modal\";\nimport Loader from \"../components/Loader\";\nimport Alert from \"../components/Alert\";\nimport ApiRequests from \"../tools/ApiRequests\";\nconst apiRequests = new ApiRequests();\n\nexport default class Ticket extends PureComponent {\n  state = {\n    tickets: [],\n    ticketMessages: [],\n    pager: {\n      totalPage: 1,\n      search: \"\",\n      page: 1,\n    },\n    ticket: {},\n    action: \"\",\n    statusMessage: \"\",\n    createTicketMessage: \"\",\n    createTicketLoader: \"\",\n    statusLoader: \"\",\n    sendMessage: \"\",\n    sendLoader: \"\",\n  };\n\n  componentDidMount = () => {\n    this.readTickets();\n  };\n\n  readTickets = async (\n    page = this.state.pager.page,\n    search = this.state.pager.search\n  ) => {\n    const { data, error } = await apiRequests.getTickets(page, search);\n    if (!error)\n      this.setState({\n        tickets: data.tickets,\n        pager: { ...data.pager },\n      });\n  };\n\n  readTicketMessage = async (id) => {\n    const { data, error } = await apiRequests.getTicket(id);\n    if (!error)\n      this.setState({ ticket: data.ticket, ticketMessages: data.messages });\n  };\n\n  sendMessage = async (e) => {\n    e.preventDefault();\n    this.setState({ sendLoader: <Loader /> });\n\n    const { error } = await apiRequests.sendTicketMessage({\n      id: this.state.ticket.id,\n      message: e.target.message.value,\n    });\n\n    if (!error) {\n      this.readTicketMessage(this.state.ticket.id);\n      this.setState({\n        sendMessage: <Alert className=\"success\" message=\"Message sent\" />,\n      });\n    } else {\n      this.setState({\n        sendMessage: <Alert className=\"danger\" message=\"Error occured.\" />,\n      });\n    }\n\n    this.setState({\n      sendLoader: \"\",\n    });\n  };\n\n  setTicketStatus = async () => {\n    await apiRequests.setTicketStatus({\n      id: this.state.ticket.id,\n      status: this.state.action,\n    });\n    this.readTickets();\n  };\n\n  createTicket = async (e) => {\n    e.preventDefault();\n    this.setState({ createTicketLoader: <Loader /> });\n    const { subject, message } = e.target;\n    const error = await apiRequests.createTicket({\n      subject: subject.value,\n      message: message.value,\n    });\n    if (!error) {\n      this.setState({\n        createTicketMessage: (\n          <Alert\n            className=\"success\"\n            message=\"Ticket has been created successfully\"\n          />\n        ),\n      });\n      this.readTickets();\n    } else {\n      this.setState({\n        createTicketMessage: (\n          <Alert className=\"danger\" message=\"Error while creating ticket.\" />\n        ),\n      });\n    }\n    this.setState({ createTicketLoader: \"\" });\n  };\n\n  render() {\n    const {\n      tickets,\n      ticketMessages,\n      ticket,\n      action,\n      statusMessage,\n      statusLoader,\n      sendMessage,\n      sendLoader,\n      pager,\n      createTicketLoader,\n      createTicketMessage,\n    } = this.state;\n\n    return (\n      <div className=\"main-content\">\n        <Header pretitle=\"Overview\" title=\"Tickets\" />\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <div className=\"card-title\">All Tickets</div>\n                  <button\n                    className=\"btn btn-primary\"\n                    data-bs-toggle=\"modal\"\n                    data-bs-target=\"#createTicket\"\n                  >\n                    New Ticket\n                  </button>\n                </div>\n                <div className=\"card-body\">\n                  <div className=\"table-responsive\">\n                    <table className=\"table table-sm table-nowrap card-table\">\n                      <thead>\n                        <tr>\n                          <th>\n                            <Link to=\"#\" className=\"text-muted\">\n                              ID\n                            </Link>\n                          </th>\n                          <th>\n                            <Link to=\"#\" className=\"text-muted\">\n                              Subject\n                            </Link>\n                          </th>\n                          <th>\n                            <Link to=\"#\" className=\"text-muted\">\n                              Last Update\n                            </Link>\n                          </th>\n                          <th>\n                            <Link to=\"#\" className=\"text-muted\">\n                              Last Message From\n                            </Link>\n                          </th>\n                          <th>\n                            <Link to=\"#\" className=\"text-muted\">\n                              Status\n                            </Link>\n                          </th>\n                          <th>\n                            <Link to=\"#\" className=\"text-muted\">\n                              Date\n                            </Link>\n                          </th>\n\n                          <th>\n                            <Link to=\"#\" className=\"text-muted\">\n                              Action\n                            </Link>\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {tickets.map((ticket) => (\n                          <tr key={ticket.id}>\n                            <td>{ticket.id}</td>\n                            <td>{ticket.subject}</td>\n                            <td>{ticket.lastUpdate}</td>\n                            <td>{ticket.lastMessageFrom}</td>\n                            <td>\n                              {ticket.status === \"open\" ? (\n                                <span className=\"badge bg-success\">Open</span>\n                              ) : (\n                                <span className=\"badge bg-danger\">Closed</span>\n                              )}\n                            </td>\n                            <td>{ticket.date}</td>\n\n                            <td>\n                              <button\n                                className=\"btn btn-primary btn-sm me-2\"\n                                onClick={() => {\n                                  this.setState({\n                                    ticket,\n                                    action:\n                                      ticket.status === \"open\"\n                                        ? \"open\"\n                                        : \"close\",\n                                  });\n                                  this.readTicketMessage(ticket.id);\n                                }}\n                                data-bs-toggle=\"modal\"\n                                data-bs-target=\"#message\"\n                              >\n                                <i className=\"fe fe-message-square\"></i>\n                              </button>\n                              {ticket.status === \"open\" ? (\n                                <button\n                                  className=\"btn btn-success btn-sm\"\n                                  onClick={() =>\n                                    this.setState({ ticket, action: \"close\" })\n                                  }\n                                  data-bs-toggle=\"modal\"\n                                  data-bs-target=\"#setStatus\"\n                                >\n                                  Close\n                                </button>\n                              ) : (\n                                <button\n                                  className=\"btn btn-warning btn-sm\"\n                                  onClick={() =>\n                                    this.setState({ ticket, action: \"open\" })\n                                  }\n                                  data-bs-toggle=\"modal\"\n                                  data-bs-target=\"#setStatus\"\n                                >\n                                  Open\n                                </button>\n                              )}\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n              <nav className=\"mt-3\">\n                <ul className=\"pagination justify-content-center\">\n                  {pager.page > 1 && (\n                    <li\n                      className=\"page-item bg-light rounded\"\n                      onClick={() =>\n                        this.readTickets(pager.page - 1, pager.search)\n                      }\n                    >\n                      <Link to=\"#\" className=\"page-link\">\n                        Previous\n                      </Link>\n                    </li>\n                  )}\n\n                  {pager.page > 1 && (\n                    <li\n                      className=\"page-item bg-light rounded\"\n                      onClick={() =>\n                        this.readTickets(pager.page - 1, pager.search)\n                      }\n                    >\n                      <Link to=\"#\" className=\"page-link\">\n                        {pager.page - 1}\n                      </Link>\n                    </li>\n                  )}\n\n                  <li className=\"page-item bg-primary rounded\">\n                    <Link to=\"#\" className=\"page-link\">\n                      {pager.page}\n                    </Link>\n                  </li>\n\n                  {pager.totalPage > pager.page && (\n                    <li\n                      className=\"page-item bg-light rounded\"\n                      onClick={() => this.readTickets(pager.next, pager.search)}\n                    >\n                      <Link to=\"#\" className=\"page-link\">\n                        {pager.page + 1}\n                      </Link>\n                    </li>\n                  )}\n\n                  {pager.totalPage > pager.page && (\n                    <li\n                      className=\"page-item bg-light rounded\"\n                      onClick={() =>\n                        this.readTickets(pager.page + 1, pager.search)\n                      }\n                    >\n                      <Link to=\"#\" className=\"page-link\">\n                        Next\n                      </Link>\n                    </li>\n                  )}\n                </ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n\n        {/* View Ticket Messages */}\n        <Modal id=\"message\" title={\"Ticket Messages - \" + ticket?.subject}>\n          <div className=\"modal-body\">\n            {/* messages */}\n            <div\n              className=\"card border mb-3\"\n              style={{\n                height: \"400px\",\n                overflowY: \"auto\",\n              }}\n            >\n              <div className=\"card-body\">\n                {ticketMessages.map((message) => (\n                  <div key={message.id}>\n                    <div\n                      className={\n                        \"row \" +\n                        (message.from !== \"Admin\" &&\n                          \"justify-content-end text-end\")\n                      }\n                    >\n                      <div\n                        className=\"col-auto\"\n                        style={{\n                          maxWidth: \"80%\",\n                        }}\n                      >\n                        <div\n                          className={`card border bg-${\n                            message.from === \"Admin\" ? \"primary\" : \"info\"\n                          } mb-2`}\n                        >\n                          <div className=\"card-body pb-1 px-2 pt-1 text-dark\">\n                            {message.message}\n                            <p\n                              className=\"p-0 m-0 text-gray\"\n                              style={{\n                                fontSize: \"8px\",\n                              }}\n                            >\n                              {new Date(message.date).toLocaleString()} -{\" \"}\n                              {message.from === \"Admin\" ? \"Admin\" : \"You\"}\n                            </p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* {action === \"open\" && ( */}\n            <form onSubmit={this.sendMessage}>\n              {sendMessage}\n              <div className=\"form-group mb-3\">\n                <label htmlFor=\"name\">Write Message</label>\n                <textarea\n                  name=\"message\"\n                  id=\"message\"\n                  cols=\"30\"\n                  rows=\"3\"\n                  className=\"form-control\"\n                  required\n                ></textarea>\n              </div>\n              <div className=\"form-group text-end\">\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Send Message {sendLoader}\n                </button>\n              </div>\n            </form>\n            {/* )} */}\n          </div>\n        </Modal>\n\n        {/* Create Ticket */}\n        <Modal id=\"createTicket\" title=\"Create Ticket\">\n          <div className=\"modal-body\">\n            <form onSubmit={this.createTicket}>\n              {createTicketMessage}\n              <div className=\"form-group mb-3\">\n                <label htmlFor=\"subject\">Subject</label>\n                <input\n                  type=\"text\"\n                  name=\"subject\"\n                  id=\"subject\"\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"form-group mb-3\">\n                <label htmlFor=\"subject\">Message</label>\n                <textarea\n                  name=\"message\"\n                  id=\"message\"\n                  cols=\"30\"\n                  rows=\"5\"\n                  className=\"form-control\"\n                  required\n                ></textarea>\n              </div>\n              <div className=\"form-group text-end mb-0\">\n                <button className=\"btn btn-primary\">\n                  Create Ticket {createTicketLoader}\n                </button>\n              </div>\n            </form>\n          </div>\n        </Modal>\n\n        {/* Close/Open Ticket */}\n        <Modal id=\"setStatus\" title={action + \" ticket\"}>\n          <div className=\"text-center\">\n            {statusMessage}\n            <h3>Are you sure you want to {action} ticket?</h3>\n            <div className=\"form-group mt-4\">\n              <button className=\"btn btn-primary m-2\" data-bs-dismiss=\"modal\">\n                Go back\n              </button>\n              <button\n                className=\"btn btn-danger\"\n                onClick={this.setTicketStatus}\n                data-bs-dismiss=\"modal\"\n              >\n                Continue {statusLoader}\n              </button>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Header from \"../components/Header\";\nimport { server, config } from \"../env\";\nimport axios from \"axios\";\nimport Loader from \"../components/Loader\";\nimport Alert from \"../components/Alert\";\n\nconst errorCodesJson = [\n  {\n    code: 1001,\n    message: \"Invalid API Key\",\n  },\n  {\n    code: 1002,\n    message: \"Invalid Label Type\",\n  },\n  {\n    code: 1003,\n    message: \"The fromName parameter is too long. Maximum length is 30\",\n  },\n  {\n    code: 1004,\n    message: \"Invalid parameters\",\n  },\n  {\n    code: 1005,\n    message: \"Invalid weight\",\n  },\n  {\n    code: 1006,\n    message: \"Price not available\",\n  },\n  {\n    code: 1007,\n    message: \"Insufficient balance in account\",\n  },\n  {\n    code: 1008,\n    message: \"Barcode not available, please try again later\",\n  },\n  {\n    code: 1009,\n    message: \"Label generation faild.\",\n  },\n  {\n    code: 1010,\n    message: \"Inernal server error\",\n  },\n];\n\nexport default class ApiDoc extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.copy = React.createRef();\n    this.regenerateBtn = React.createRef();\n  }\n\n  state = {\n    apiKey: \"\",\n    isLoaded: false,\n    keyLoader: \"\",\n  };\n\n  componentDidMount = () => {\n    this.readAccess();\n  };\n\n  readAccess = async () => {\n    await axios\n      .get(server + \"/api/user/access\", config)\n      .then((rsp) => {\n        this.setState({ apiKey: rsp.data.payload?.apiKey });\n      })\n      .catch((err) => {});\n  };\n\n  resetKey = async (e) => {\n    e.preventDefault();\n\n    this.setState({\n      loaderKey: <Loader />,\n    });\n\n    await axios\n      .post(server + \"/api/user/generateKey\", {}, config)\n      .then((rsp) => {\n        this.setState({\n          messageKey: (\n            <Alert className=\"success\" message=\"Key Reset Successful.\" />\n          ),\n        });\n        this.readAccess();\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          messageKey: (\n            <Alert className=\"danger\" message=\"Error resetting the key\" />\n          ),\n        });\n      });\n    this.setState({\n      loaderKey: \"\",\n    });\n  };\n\n  render() {\n    const { keyLoader, apiKey } = this.state;\n    console.log(apiKey);\n    return (\n      <div className=\"main-content\">\n        <Header pretitle=\"Overview\" title=\"Api Documentation\" />\n\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h4 className=\"mt-0 header-title api-title\">API DOC</h4>\n                  <p className=\"sub-title\">\n                    A complete guide to integrate API.\n                  </p>\n                  {/* API KEY */}\n                  <div>\n                    <span className=\"api-title\">YOUR API KEY</span>\n                    <pre>{apiKey}</pre>\n                    <button\n                      className=\"btn btn-sm btn-primary me-2\"\n                      ref={this.copy}\n                      onClick={() => {\n                        navigator.clipboard.writeText(apiKey);\n                        this.copy.current.innerText = \"Copied!\";\n                        this.copy.current.classList.add(\"btn-success\");\n                        setTimeout(() => {\n                          this.copy.current.innerText = \"Copy\";\n                          this.copy.current.classList.remove(\"btn-success\");\n                        }, 2000);\n                      }}\n                    >\n                      Copy\n                    </button>\n                    <button\n                      ref={this.regenerateBtn}\n                      className=\"btn btn-sm btn-info\"\n                      onClick={this.resetKey}\n                    >\n                      Regenerate Key {keyLoader}\n                    </button>\n                  </div>\n\n                  {/* BASE URL */}\n                  <div className=\"mt-3\">\n                    <span className=\"api-title\">BASE URL</span>\n                    <pre>{server}</pre>\n                  </div>\n                </div>\n              </div>\n\n              {/* API AUTHENTICATIOn */}\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h4 className=\"mt-0 api-title\">\n                    API (Authentication/Headers)\n                  </h4>\n                  <p className=\"sub-title\">\n                    To access the API, you need to pass `x-api-key` parameter in\n                    headers for each request.\n                  </p>\n                  <pre>\n                    <code className=\"language-bash\">x-api-key : {apiKey}</code>\n                    <br />\n                    <code className=\"language-bash\">\n                      Content-Type : application/json\n                    </code>\n                  </pre>\n                </div>\n              </div>\n\n              {/* Create Label */}\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h4 className=\"mt-0 api-title\">Generate Label</h4>\n                  <p className=\"sub-title\">\n                    Follow given instructions to generate new label.\n                  </p>\n                  <h6 className=\"sub-title\">Request</h6>\n                  <pre>\n                    <code className=\"language-bash\">\n                      url: {server}/api/label/generate <br />\n                      type: <span className=\"text-warning\">POST</span> <br />\n                      headers: {`{ \"x-api-key\" : \"${this.state.apiKey}\" }`}{\" \"}\n                      <br />\n                      body:{\" \"}\n                      {`\n{\n        type: \"priority | express | firstclass\",\n        weight: 9,\n        date: \"09/30/2022\",\n        fromCountry: \"USA\",\n        fromName: \"Macintosh\",\n        fromRefNumber: \"---OPTIONAL---\",\n        fromStreetNumber: \"272 Tecumseh loop\",\n        fromStreetNumber2: \"---OPTIONAL---\",\n        fromZip: \"70570\",\n        fromCity: \"Louisana\",\n        fromState: \"LA\",\n        toCountry: \"USA\",\n        toName: \"Steave\" ,\n        toRefNumber: \"---OPTIONAL---\",\n        toStreetNumber: \"Opelousas\",\n        toStreetNumber2: \"---OPTIONAL---\",\n        toZip: \"70570\",\n        toCity: \"Louisana\",\n        toState: \"LA\"\n}\n                      `}\n                    </code>\n                  </pre>\n\n                  <h6 className=\"sub-title\">Response</h6>\n                  <pre>\n                    {`{\n    \"message\": \"Label has been generated successfully!\",\n    \"payload\": {\n        \"id\": 8,\n        \"code\": \"9114902200852075310054\",\n        \"pdf\": \"${server}/labels/9114902200852075310054-1665335778918.pdf\"\n    },\n    \"pager\": {}\n}`}\n                  </pre>\n                </div>\n              </div>\n\n              {/* get label */}\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h4 className=\"mt-0 api-title\">GET Label</h4>\n                  <p className=\"sub-title\">\n                    Follow given instructions to generate new label.\n                  </p>\n                  <h6 className=\"sub-title\">Request</h6>\n                  <pre>\n                    <code className=\"language-bash\">\n                      URL: {server}/api/label/read/{\"<LABEL_ID>\"} <br />\n                      TYPE: <span className=\"text-success\">GET</span> <br />\n                      {/* HEADERS: {`{ \"x-api-key\" : \"${this.state.apiKey}\" }`} */}\n                    </code>\n                  </pre>\n\n                  <h6 className=\"sub-title\">Response</h6>\n                  <pre>\n                    {`{\n    \"message\": \"Label has been read successfully!\",\n    \"payload\": {\n        \"label\": {\n            \"id\": 8,\n            \"type\": \"priority\",\n            \"weight\": 15,\n            \"date\": \"2022-09-29T18:30:00.000Z\",\n            \"fromCountry\": \"USA\",\n            \"fromName\": \"Macintosh\",\n            \"fromRefNumber\": \"\",\n            \"fromStreetNumber\": \"272 Tecumseh loop\",\n            \"fromZip\": \"70570\",\n            \"fromCity\": \"Louisana\",\n            \"fromState\": \"LA\",\n            \"toCountry\": \"USA\",\n            \"toName\": \"Steave\",\n            \"toRefNumber\": \"904 Anthony ave\",\n            \"toStreetNumber\": \"Opelousas\",\n            \"toZip\": \"70570\",\n            \"toCity\": \"Louisana\",\n            \"toState\": \"LA\",\n            \"barcodeOCR\": \"9114902200852075310054\",\n            \"barcodeId\": 1,\n            \"pdfPath\": \"${server}/labels/9114902200852075310054-1665335778918.pdf\",\n            \"status\": false,\n            \"statusMessage\": null,\n            \"createdAt\": \"2022-10-09T17:16:20.000Z\"\n        }\n    },\n    \"pager\": {}\n}`}\n                  </pre>\n                </div>\n              </div>\n\n              {/* ERROR CODES */}\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h4 className=\"mt-0 api-title\">ERROR CODES</h4>\n                  <div className=\"table-responsive\">\n                    <table className=\"table table-bordered table-striped\">\n                      <thead>\n                        <tr>\n                          <th>CODE</th>\n                          <th>MESSAGE</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {errorCodesJson.map((c) => (\n                          <tr key={c.code}>\n                            <td>{c.code}</td>\n                            <td>{c.message}</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Header from \"../components/Header\";\nimport axios from \"axios\";\nimport { server, config } from \"../env\";\nimport Loader from \"../components/Loader\";\nimport Alert from \"../components/Alert\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport ApiRequests from \"../tools/ApiRequests\";\nconst apiRequests = new ApiRequests();\n\nexport default class GeneateLabels extends PureComponent {\n  state = {\n    labels: [],\n    page: 1,\n    search: \"\",\n    totalPages: 1,\n    loader: \"\",\n    label: {},\n    message: \"\",\n    recycleLoader: \"\",\n\n    date: new Date(),\n    type: \"priority\",\n\n    fromStreetNumber: \"\",\n    fromStreetNumber2: \"\",\n    fromZip: \"\",\n    fromCity: \"\",\n    fromState: \"\",\n    fromCountry: \"USA\",\n\n    toStreetNumber: \"\",\n    toStreetNumber2: \"\",\n    toZip: \"\",\n    toCity: \"\",\n    toState: \"\",\n    toCountry: \"USA\",\n\n    isFromAddressVerified: false,\n    isToAddressVerified: false,\n    isVerificationInitiated: false,\n\n    weight: 0,\n    pricing: [],\n    price: 0,\n\n    addressMessage: \"\",\n    rateLimit: 0,\n  };\n\n  componentDidMount = async () => {\n    this.readAccess();\n    const { data } = await apiRequests.getPricing();\n    this.setState({\n      pricing: data.sort((a, b) => b.id - a.id),\n    });\n  };\n\n  readAccess = async () => {\n    await axios\n      .get(server + \"/api/user/access\", config)\n      .then((rsp) => {\n        this.setState({ apiKey: rsp.data.payload?.apiKey });\n      })\n      .catch((err) => {});\n  };\n\n  generateLabel = async (e) => {\n    e.preventDefault();\n    if (this.state.rateLimit > 0) {\n      window.location.reload();\n      return;\n    }\n    this.setState({ rateLimit: this.state.rateLimit + 1 });\n\n    const {\n      fromStreetNumber,\n      fromStreetNumber2,\n      fromZip,\n      fromCity,\n      fromState,\n      toStreetNumber,\n      toStreetNumber2,\n      toZip,\n      toCity,\n      toState,\n    } = this.state;\n\n    // check address validation\n    var fromCheck = await this.verifyAddress(\n      fromStreetNumber,\n      fromStreetNumber2,\n      fromZip,\n      fromCity,\n      fromState,\n      \"from\"\n    );\n    if (!fromCheck) return;\n\n    var toCheck = await this.verifyAddress(\n      toStreetNumber,\n      toStreetNumber2,\n      toZip,\n      toCity,\n      toState,\n      \"to\"\n    );\n\n    if (!toCheck) return;\n\n    this.setState({\n      loader: <Loader />,\n    });\n\n    const form = new FormData(e.target);\n    const data = {};\n    form.forEach((value, key) => {\n      data[key] = value;\n    });\n    data.date = this.state.date;\n\n    // format date in MM-DD-YYYY format\n    const date = new Date(data.date);\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n\n    data.date = month + \"-\" + day + \"-\" + year;\n\n    await axios\n      .post(server + \"/api/label/generate\", data, {\n        headers: {\n          \"x-api-key\": this.state.apiKey,\n        },\n      })\n      .then((res) => {\n        this.setState({\n          addressMessage: (\n            <Alert className=\"success\" message={res.data.message} />\n          ),\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          addressMessage: (\n            <Alert className=\"danger\" message={err.response?.data?.message} />\n          ),\n        });\n      });\n\n    this.setState({\n      loader: \"\",\n    });\n  };\n\n  onChange = (e) => {\n    this.setState({ isVerificationInitiated: true });\n    const { name, value } = e.target;\n    if (name === \"toZip\" || name === \"fromZip\") {\n      var code = \"\";\n      if (value.includes(\"-\") && value.length > 5) {\n        code = value;\n      } else if (value.includes(\"-\") && value.length <= 5) {\n        code = value.replaceAll(\"-\", \"\");\n      } else if (!value.includes(\"-\") && value.length > 5) {\n        code = value.substring(0, 5) + \"-\" + value.substring(5, value.length);\n      } else if (!value.includes(\"-\") && value.length < 5) {\n        code = value;\n      } else {\n        code = value;\n      }\n\n      this.setState({\n        [name]: code,\n      });\n    } else {\n      this.setState({\n        [e.target.name]: e.target.value,\n      });\n    }\n  };\n\n  verifyAddress = async (street1, street2, city, state, zip, type = \"from\") => {\n    const obj = {};\n    if (street1) obj.street1 = street1;\n    if (street2) obj.street2 = street2;\n    if (city) obj.city = city;\n    if (state) obj.state = state;\n    if (zip) obj.zip = zip;\n\n    if (type === \"from\") {\n      this.setState({\n        isFromAddressVerified: false,\n      });\n    }\n\n    this.setState({\n      addressMessage: <Alert className=\"info\" message=\"Processing...\" />,\n    });\n\n    var status = false;\n\n    await axios\n      .post(\n        server + \"/api/usps/address\",\n        {\n          ...obj,\n        },\n        config\n      )\n      .then((res) => {\n        if (res.data.payload) {\n          if (type === \"from\") {\n            this.setState({\n              isFromAddressVerified: true,\n            });\n          } else {\n            this.setState({\n              isToAddressVerified: true,\n            });\n          }\n          this.setState({\n            addressMessage: (\n              <Alert className=\"info\" message={`Address (${type}) verified.`} />\n            ),\n          });\n          status = true;\n        } else {\n          if (type === \"from\") {\n            this.setState({\n              isFromAddressVerified: false,\n            });\n          } else {\n            this.setState({\n              isToAddressVerified: false,\n            });\n          }\n          this.setState({\n            addressMessage: (\n              <Alert\n                className=\"danger\"\n                message={`Address (${type}) not verified.`}\n              />\n            ),\n          });\n          status = false;\n        }\n      })\n      .catch((err) => {\n        status = false;\n      });\n    this.setState({\n      message: \"\",\n    });\n    return status;\n  };\n\n  zipCodeLookup = async (city, state, street1, street2, type = \"from\") => {\n    console.log(city, state, street1, street2);\n    if (!city) return;\n    if (!state) return;\n    if (!street1) return;\n\n    const obj = {};\n    if (street1) obj.street1 = street1;\n    if (street2) obj.street2 = street2;\n    if (city) obj.city = city;\n    if (state) obj.state = state;\n\n    this.setState({\n      message: <Alert className=\"info\" message=\"Processing...\" />,\n    });\n\n    var result = {};\n    await axios\n      .post(\n        server + \"/api/usps/zipcode\",\n        {\n          ...obj,\n        },\n        config\n      )\n      .then((res) => {\n        if (res.data.payload) {\n          result = res.data.payload;\n          this.setState({\n            message: \"\",\n          });\n        } else {\n          this.setState({\n            message: <Alert className=\"danger\" message=\"Invalid Address\" />,\n          });\n        }\n      })\n      .catch((err) => {\n        this.setState({\n          message: <Alert className=\"danger\" message=\"Invalid Address\" />,\n        });\n      });\n\n    const zip = result.zip;\n\n    console.log(zip);\n\n    if (type === \"from\" && result) {\n      this.setState({\n        fromZip: zip?.endsWith(\"-\") ? zip?.slice(0, 5) : zip,\n      });\n    }\n    if (type === \"to\" && result) {\n      this.setState({\n        toZip: zip?.endsWith(\"-\") ? zip?.slice(0, 5) : zip,\n      });\n    }\n  };\n\n  cityStateLookup = async (zip, type = \"form\") => {\n    if (zip.length !== 5) return;\n\n    var result;\n    const obj = {\n      zip: zip.replaceAll(\"-\", \"\"),\n    };\n\n    await axios\n      .post(\n        server + \"/api/usps/city-state\",\n        {\n          ...obj,\n        },\n        config\n      )\n      .then((res) => {\n        if (res.data.payload) {\n          result = res.data.payload;\n          console.log(res.data.payload);\n        }\n      })\n      .catch((err) => {});\n\n    if (type === \"from\") {\n      this.setState({\n        fromCity: result.city,\n        fromState: result.state,\n      });\n    }\n    if (type === \"to\") {\n      this.setState({\n        toCity: result.city,\n        toState: result.state,\n      });\n    }\n  };\n\n  recycleLabel = async () => {\n    this.setState({\n      recycleLoader: <Loader />,\n    });\n\n    await axios\n      .post(\n        server + \"/api/admin/recycle-label\",\n        {\n          id: this.state.label.id,\n        },\n        config\n      )\n      .then((res) => {\n        this.readLabels();\n        var modalCloseButton = document.getElementById(\"closeRecycleModal\");\n        if (modalCloseButton) modalCloseButton.click();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    this.setState({\n      recycleLoader: \"\",\n    });\n  };\n\n  changePrice = async (e) => {\n    const pricing = this.state.pricing;\n    const type = this.state.type;\n    const weight = parseFloat(e.target.value);\n    this.setState({\n      weight,\n    });\n    var pricingObj = pricing.filter((item) => item.type === type);\n\n    if (pricingObj.length === 0) return;\n    if (!weight) return;\n\n    pricingObj = pricingObj.find(\n      (item) => weight <= item.toWeight && weight >= item.fromWeight\n    );\n\n    if (pricingObj.length === 0) return;\n\n    this.setState({\n      price: pricingObj.price,\n    });\n  };\n\n  changeType = async (e) => {\n    this.setState({\n      type: e.target.value,\n    });\n\n    if (!this.state.weight) return;\n\n    var pricingObj = this.state.pricing.filter(\n      (item) => item.type === e.target.value\n    );\n\n    console.log(pricingObj);\n\n    if (pricingObj.length === 0) return;\n\n    pricingObj = pricingObj.find(\n      (item) =>\n        this.state.weight <= item.toWeight &&\n        this.state.weight >= item.fromWeight\n    );\n\n    if (pricingObj.length === 0) return;\n\n    this.setState({\n      price: pricingObj.price,\n    });\n  };\n\n  render() {\n    const { date, price } = this.state;\n    const { loader, addressMessage } = this.state;\n\n    const {\n      type,\n      fromStreetNumber,\n      fromStreetNumber2,\n      fromZip,\n      fromCity,\n      fromState,\n      fromCountry,\n\n      toStreetNumber,\n      toStreetNumber2,\n      toZip,\n      toCity,\n      toState,\n      toCountry,\n    } = this.state;\n\n    // const { isFromAddressVerified, isToAddressVerified } = this.state;\n    const { isVerificationInitiated } = this.state;\n\n    return (\n      <div className=\"main-content\">\n        <Header pretitle=\"Overview\" title=\"Labels\" />\n        <div className=\"container-fluid pb-5\">\n          <form onSubmit={this.generateLabel}>\n            <span className={isVerificationInitiated ? \"\" : \"d-none\"}>\n              {addressMessage}\n            </span>\n\n            {/* Top ROw */}\n            <div className=\"card mb-4\">\n              <div className=\"card-body\">\n                <div className=\"row\">\n                  <div className=\"col-md-3\">\n                    <div className=\"form-group mb-3\">\n                      <label htmlFor=\"\">Type</label>\n                      <select\n                        name=\"type\"\n                        id=\"type\"\n                        className=\"form-control\"\n                        required\n                        onChange={this.changeType}\n                      >\n                        <option value=\"priority\">Priority</option>\n                        <option value=\"express\">Express</option>\n                        <option value=\"firstclass\">First Class</option>\n                        <option value=\"signature\">Signature</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"col-md-3\">\n                    <div className=\"form-group mb-3\">\n                      <label htmlFor=\"\">\n                        Weight ({type === \"firstclass\" ? \"oz\" : \"lb\"})\n                      </label>\n                      <input\n                        type=\"number\"\n                        name=\"weight\"\n                        id=\"weight\"\n                        className=\"form-control\"\n                        onChange={(e) => {\n                          this.changePrice(e);\n                        }}\n                        required\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-md-3\">\n                    <div className=\"form-group mb-3\">\n                      <label htmlFor=\"\">Date</label>\n                      <DatePicker\n                        selected={date}\n                        onChange={(date) => this.setState({ date })}\n                        className=\"form-control\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-md-3\">\n                    <div className=\"form-group mb-3\">\n                      <label htmlFor=\"\">Total Price</label>\n                      <button type=\"button\" className=\"btn btn-primary w-100\">\n                        ${price}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              {/* from */}\n              <div className=\"col-md-6\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <div className=\"d-flex flex-column w-100\">\n                      {/* from name */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">From Name</label>\n                          <input\n                            type=\"text\"\n                            name=\"fromName\"\n                            id=\"fromName\"\n                            className=\"form-control\"\n                            required\n                          />\n                        </div>\n                      </div>\n\n                      {/* fromRefNumber */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">From Reference Number</label>\n                          <input\n                            type=\"text\"\n                            name=\"fromRefNumber\"\n                            id=\"fromRefNumber\"\n                            className=\"form-control\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* fromStreetNumber */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">From Street Number</label>\n                          <input\n                            type=\"text\"\n                            name=\"fromStreetNumber\"\n                            id=\"fromStreetNumber\"\n                            className=\"form-control\"\n                            value={fromStreetNumber}\n                            onChange={(e) => {\n                              this.onChange(e);\n                              this.zipCodeLookup(\n                                fromCity,\n                                fromState,\n                                e.target.value,\n                                fromStreetNumber2,\n                                fromZip,\n                                \"from\"\n                              );\n                            }}\n                            required\n                          />\n                        </div>\n                      </div>\n\n                      {/* fromStreetNumber2 */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">From Street Number 2</label>\n                          <input\n                            type=\"text\"\n                            name=\"fromStreetNumber2\"\n                            id=\"fromStreetNumber2\"\n                            className=\"form-control\"\n                            value={fromStreetNumber2}\n                            onChange={(e) => {\n                              this.onChange(e);\n                              this.zipCodeLookup(\n                                fromCity,\n                                fromState,\n                                fromStreetNumber,\n                                e.target.value,\n                                fromZip,\n                                \"from\"\n                              );\n                            }}\n                          />\n                        </div>\n                      </div>\n\n                      {/* fromCity */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">From City</label>\n                          <input\n                            type=\"text\"\n                            name=\"fromCity\"\n                            id=\"fromCity\"\n                            className=\"form-control\"\n                            value={fromCity}\n                            onChange={(e) => {\n                              this.onChange(e);\n                              this.zipCodeLookup(\n                                e.target.value,\n                                fromState,\n                                fromStreetNumber,\n                                fromStreetNumber2,\n                                \"from\"\n                              );\n                            }}\n                            required\n                          />\n                        </div>\n                      </div>\n\n                      {/* fromState */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">From State</label>\n                          <input\n                            type=\"text\"\n                            name=\"fromState\"\n                            id=\"fromState\"\n                            className=\"form-control\"\n                            value={fromState}\n                            onChange={(e) => {\n                              this.onChange(e);\n                              this.zipCodeLookup(\n                                fromCity,\n                                e.target.value,\n                                fromStreetNumber,\n                                fromStreetNumber2,\n                                fromZip,\n                                \"from\"\n                              );\n                            }}\n                            maxLength={2}\n                            required\n                          />\n                        </div>\n                      </div>\n\n                      {/* fromZip */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">From Zip</label>\n                          <input\n                            type=\"text\"\n                            name=\"fromZip\"\n                            id=\"fromZip\"\n                            value={fromZip}\n                            onChange={(e) => {\n                              this.onChange(e);\n                              this.cityStateLookup(e.target.value, \"from\");\n                            }}\n                            className=\"form-control\"\n                            required\n                          />\n                        </div>\n                      </div>\n\n                      {/* fromCountry */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">From Country</label>\n                          <input\n                            type=\"text\"\n                            name=\"fromCountry\"\n                            id=\"fromCountry\"\n                            className=\"form-control\"\n                            value={fromCountry}\n                            required\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* to */}\n              <div className=\"col-md-6\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <div className=\"d-flex flex-column w-100\">\n                      {/* toName */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">To Name</label>\n                          <input\n                            type=\"text\"\n                            name=\"toName\"\n                            id=\"toName\"\n                            className=\"form-control\"\n                            required\n                          />\n                        </div>\n                      </div>\n\n                      {/* toRefNumber */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">To Reference Number</label>\n                          <input\n                            type=\"text\"\n                            name=\"toRefNumber\"\n                            id=\"toRefNumber\"\n                            className=\"form-control\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* toStreetNumber */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">To Street Number</label>\n                          <input\n                            type=\"text\"\n                            name=\"toStreetNumber\"\n                            id=\"toStreetNumber\"\n                            className=\"form-control\"\n                            value={toStreetNumber}\n                            onChange={(e) => {\n                              this.onChange(e);\n                              this.zipCodeLookup(\n                                toCity,\n                                toState,\n                                e.target.value,\n                                toStreetNumber2,\n                                \"to\"\n                              );\n                            }}\n                            required\n                          />\n                        </div>\n                      </div>\n\n                      {/* toStreetNumber2 */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">To Street Number 2</label>\n                          <input\n                            type=\"text\"\n                            name=\"toStreetNumber2\"\n                            id=\"toStreetNumber2\"\n                            className=\"form-control\"\n                            value={toStreetNumber2}\n                            onChange={(e) => {\n                              this.onChange(e);\n                              this.zipCodeLookup(\n                                toCity,\n                                toState,\n                                toStreetNumber,\n                                e.target.value,\n                                \"to\"\n                              );\n                            }}\n                          />\n                        </div>\n                      </div>\n\n                      {/* toCity */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">To City</label>\n                          <input\n                            type=\"text\"\n                            name=\"toCity\"\n                            id=\"toCity\"\n                            className=\"form-control\"\n                            value={toCity}\n                            onChange={(e) => {\n                              this.onChange(e);\n                              this.zipCodeLookup(\n                                e.target.value,\n                                toState,\n                                toStreetNumber,\n                                toStreetNumber2,\n                                \"to\"\n                              );\n                            }}\n                            required\n                          />\n                        </div>\n                      </div>\n\n                      {/* toState */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">To State</label>\n                          <input\n                            type=\"text\"\n                            name=\"toState\"\n                            id=\"toState\"\n                            className=\"form-control\"\n                            value={toState}\n                            onChange={(e) => {\n                              this.onChange(e);\n                              this.zipCodeLookup(\n                                toCity,\n                                e.target.value,\n                                toStreetNumber,\n                                toStreetNumber2,\n                                \"to\"\n                              );\n                            }}\n                            maxLength={2}\n                            required\n                          />\n                        </div>\n                      </div>\n\n                      {/* toZip */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">To Zip</label>\n                          <input\n                            type=\"text\"\n                            name=\"toZip\"\n                            id=\"toZip\"\n                            className=\"form-control\"\n                            value={toZip}\n                            onChange={(e) => {\n                              this.onChange(e);\n                              this.cityStateLookup(e.target.value, \"to\");\n                            }}\n                            required\n                          />\n                        </div>\n                      </div>\n\n                      {/* toCountry */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">To Country</label>\n                          <input\n                            type=\"text\"\n                            name=\"toCountry\"\n                            id=\"toCountry\"\n                            className=\"form-control\"\n                            value={toCountry}\n                            required\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-12 \">\n              <div className=\"form-group text-end\">\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Generate Label (${price}) {loader}\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\n// Helper Components\nimport Sidebar from \"../components/Sidebar\";\nimport Balance from \"../source/Balance\";\nimport Barcodes from \"../source/Barcodes\";\nimport Dashboard from \"../source/Dashboard\";\nimport Labels from \"../source/Labels\";\nimport Settings from \"../source/Settings\";\nimport Stats from \"../source/Stats\";\nimport Ticket from \"../source/Ticket\";\nimport ApiDoc from \"../source/Api\";\nimport GeneateLabels from \"../source/GeneateLabel\";\n\nexport default function AuthRouter() {\n  document.body.classList.remove(\"d-flex-grid\");\n  document.body.classList.remove(\"bg-auth\");\n\n  return (\n    <BrowserRouter>\n      <Sidebar />\n      <Switch>\n        <Route path=\"/api-documentation\" component={ApiDoc} />\n        <Route path=\"/tickets\" component={Ticket} />\n        <Route path=\"/balance\" component={Balance} />\n        <Route path=\"/website\" component={Stats} />\n        <Route path=\"/settings\" component={Settings} />\n        <Route path=\"/generate-label\" component={GeneateLabels} />\n        <Route path=\"/labels\" component={Labels} />\n        <Route path=\"/\" component={Dashboard} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import React, { PureComponent } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { server, config } from \"./env\";\n\n// Componenets\nimport PageLoader from \"./components/PageLoader\";\n\n// Routes\nimport AuthRouter from \"./routes/AuthRouter\";\nimport DashboardRouter from \"./routes/DashboardRouter\";\n\nclass App extends PureComponent {\n  state = {\n    token: Cookies.get(\"token\"),\n    isLogin: false,\n    isAllLoaded: false,\n  };\n\n  componentDidMount = async () => {\n    await this.checkUserLogin(this.state.token);\n  };\n\n  checkUserLogin = async (token) => {\n    await axios(server + \"/api/user/access\", config)\n      .then((rsp) => {\n        this.setState({\n          isAllLoaded: true,\n          isLogin: true,\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          isAllLoaded: true,\n          isLogin: false,\n        });\n      });\n  };\n\n  render() {\n    const { isLogin, isAllLoaded } = this.state;\n    return isAllLoaded ? (\n      <BrowserRouter>\n        {isLogin ? (\n          <Switch>\n            <Route path=\"/\" component={DashboardRouter} />\n          </Switch>\n        ) : (\n          <Switch>\n            <Route path=\"/\" component={AuthRouter} />\n          </Switch>\n        )}\n      </BrowserRouter>\n    ) : (\n      <PageLoader />\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const Cookies = require(\"js-cookie\");\n\nmodule.exports = {\n  // server: window.location.href.includes(\"localhost\")\n  //   ? \"http://localhost:7400\"\n  //   : \"https://api.labelaxxess.com\",\n\n  server: \"https://api.labelaxxess.com\",\n\n  config: {\n    headers: {\n      Authorization: \"Bearer \" + Cookies.get(\"token\"),\n    },\n  },\n\n  // recaptcha keys\n  RECAPTCHA_KEY: \"6LdG1AMjAAAAAOeHyOPzPV5zBbStTqiyXrkfu91r\",\n  checkAccess: (err) => {\n    if (err.response) {\n      if (err.response.status === 401) {\n        Cookies.remove(\"footprint\");\n        window.location.href = \"/\";\n      }\n    }\n    return true;\n  },\n};\n","function BarChart(dom, data) {\n  var Chart = window.Chart;\n  new Chart(dom, {\n    type: \"bar\",\n    options: {\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              callback: function (e) {\n                return e;\n              },\n            },\n            gridLines: {\n              display: false,\n            },\n          },\n        ],\n      },\n    },\n    data,\n  });\n  return Chart;\n}\n\nfunction PieChart(dom, data) {\n  var Chart = window.Chart;\n  new Chart(dom, {\n    type: \"doughnut\",\n    options: {\n      tooltips: {\n        callbacks: {\n          beforeLabel: function () {\n            return \"€\";\n          },\n        },\n      },\n      legend: {\n        labels: {\n          generateLabels: function (chart) {},\n        },\n      },\n    },\n    data,\n  });\n  return Chart;\n}\n\nfunction LineChart(dom, data) {\n  var Chart = window.Chart;\n  new Chart(dom, {\n    type: \"line\",\n    options: {\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              callback: function (value) {\n                return value + \" Label\";\n              },\n            },\n            gridLines: {\n              display: false,\n            },\n          },\n        ],\n      },\n    },\n    data,\n  });\n  return Chart;\n}\n\nfunction Legend(data) {\n  let content = \"\";\n\n  data.labels.forEach(function (label, index) {\n    const bgColor = data.datasets[0].backgroundColor[index];\n\n    content += '<span class=\"chart-legend-item\">';\n    content +=\n      '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\n      bgColor +\n      '\"></i>';\n    content += label;\n    content += \"</span>\";\n  });\n  return content;\n}\n\nconst quillToolbarOptions = [\n  [\"bold\", \"italic\", \"underline\", \"strike\", \"image\", \"code\"], // toggled buttons\n  [\"blockquote\", \"code-block\"],\n\n  [{ header: 1 }, { header: 2 }], // custom button values\n  [{ list: \"ordered\" }, { list: \"bullet\" }],\n  [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\n  [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\n  [{ direction: \"rtl\" }], // text direction\n\n  [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\n  [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n  [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n  [{ font: [] }],\n  [{ align: [] }],\n\n  [\"clean\"], // remove formatting button\n];\n\nmodule.exports = {\n  BarChart,\n  PieChart,\n  LineChart,\n  Legend,\n  quillToolbarOptions,\n};\n"],"sourceRoot":""}